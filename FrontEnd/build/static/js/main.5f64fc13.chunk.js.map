{"version":3,"sources":["utils/constant.js","containers/System/Admin/UserRedux.js","containers/HomePage/Section/OutStandingDoctor.js","containers/System/Admin/UserReduxIsLoginFalse.js","axios.js","services/userService.js","store/actions/appActions.js","store/actions/userActions.js","store/actions/adminAction.js","store/reducers/appReducer.js","store/reducers/userReducer.js","store/reducers/adminReducer.js","store/reducers/rootReducer.js","redux.js","components/CustomScrollbars.js","hoc/authentication.js","utils/KeyCodeUtils.js","utils/LanguageUtils.js","routes/Home.js","components/CustomToast.js","containers/Auth/Login.js","utils/emitter.js","containers/System/ModalUser.js","containers/System/ModalEditUser.js","containers/System/UserManage.js","components/Navigator.js","containers/Header/menuApp.js","containers/Header/Header.js","containers/System/Admin/ManageDoctor.js","containers/System/Specialty/ManageSpecialty.js","routes/System.js","containers/HomePage/HomeHeader.js","containers/HomePage/Section/Specialty.js","containers/HomePage/Section/MedicalFacility.js","containers/HomePage/Section/HandBook.js","containers/HomePage/Section/About.js","containers/HomePage/HomeFooter.js","containers/HomePage/HomePage.js","containers/Patient/Doctor/ProfileDoctor.js","components/Input/DatePicker.js","containers/Patient/Doctor/Modal/BookingModal.js","containers/Patient/Doctor/DoctorSchedule.js","containers/Patient/Doctor/DoctorExtraInfor.js","containers/Patient/Doctor/DetailDoctor.js","containers/System/Doctor/ManageSchedule.js","routes/Doctor.js","containers/Patient/VerifyEmail.js","containers/App.js","serviceWorker.js","hoc/IntlProviderWrapper.js","index.js","utils/CommonUtils.js","containers/System/Admin/TableManageUser.js","store/actions/actionTypes.js"],"names":["path","HOME","HOMEPAGE","LOGIN","LOG_OUT","CREATE_USER","SYSTEM","MANAGE_SCHEDULE","DETAIL_DOCTOR","VERIFY_EMAIL_BOOKING","LANGUAGES","VI","EN","CRUD_ACTION","CREATE","READ","EDIT","DELETE","USER_ROLE","ADMIN","DOCTOR","PATIENT","UserRedux","props","handleOnchangeImage","event","a","data","target","files","file","CommonUtils","getBase64","base64","objectUrl","URL","createObjectURL","setState","previewImgULR","avatar","openPreviewImage","state","isOpen","onChangeInput","id","copyState","value","handleSaveUser","checkValidateInput","action","createNewUser","email","password","firstName","lastName","address","phonenumber","phoneNumber","gender","roleId","role","positionId","position","editUser","userEditId","isValidate","arrCheck","i","length","alert","handleEditUserFromParent","user","imageBase64","image","Buffer","toString","console","log","funcTestInput","genderArr","positionArr","roleArr","this","getGenderStart","getPositionStart","getRoleStart","prevProps","prevState","snapshot","genderRedux","arrGender","keyMap","positionRedux","arrPosition","roleRedux","arrRole","listUsers","arrGenders","arrPositions","language","genders","positions","roles","className","type","onChange","disabled","map","item","index","valueVi","valueEn","hidden","htmlFor","style","backgroundImage","onClick","mainSrc","onCloseRequest","Component","connect","app","admin","isLoadingGenderRedux","isLoadingGender","users","dispatch","OutStandingDoctor","arrDoctor","preProps","preState","topDoctorsRedux","loadTopDoctor","testAPI","doctor","history","push","settings","nameVi","positionData","nameEn","handleViewDetailDoctor","withRouter","isLoggedIn","topDoctors","changeLanguage","UserReduxIsLoginFalse","toast","error","instance","axios","create","baseURL","process","interceptors","response","use","handleLoginApi","userEmail","userPassword","post","getAllUsers","inputId","get","getTopDoctorService","limit","getAllDoctors","createNewUserService","deleteUserService","userId","delete","getAllCodeService","inputType","editUserService","inputData","put","saveDetailInforDoctor","getDetailInforDoctor","saveBulkScheduleDoctor","getScheduleDoctorByDate","doctorId","date","getExtraInforDoctorById","getProfileDoctorById","postBookAppointment","postVerifyBookAppointment","changeLanguageApp","languageInput","actionTypes","CHANGELANGUAGE","userLoginSuccess","userInfo","USER_LOGIN_SUCCESS","processLogout","PROCESS_LOGOUT","fetchGenderStart","getState","FETCH_GENDER_START","res","errCode","fetchGenderSuccess","fetchGenderFailed","genderData","FETCH_GENDER_SUCCESS","FETCH_GENDER_FAILED","fetchPositionStart","FETCH_POSITION_START","fetchPositionSuccess","fetchPositionFailed","FETCH_POSITION_SUCCESS","FETCH_POSITION_FAILED","fetchRoleStart","FETCH_ROLE_START","fetchRoleSuccess","fetchRoleFailed","roleData","FETCH_ROLE_SUCCESS","FETCH_ROLE_FAILED","success","saveUserSuccess","fetchAllUserStart","warn","saveUserFailed","reject","CREATE_USER_SUCCES","CREATE_USER_FAILED","fetchAllUserSuccess","reverse","fetchAllUserFailed","FETCH_ALL_USER_SUCCESS","FETCH_ALL_USER_FAILED","deleteUser","deleteUserSuccess","deleteUserFailed","DELETE_USER_SUCCES","DELETE_USER_FAILED","editUserSuccess","editUserFailed","EDIT_USER_SUCCES","EDIT_USER_FAILED","fetchTopDoctor","fetchTopDoctorSuccess","fetchTopDoctorFailed","FETCH_TOP_DOCTOR_SUCCESS","dataDoctors","FETCH_TOP_DOCTOR_FAILED","fetchAllDoctor","fetchAllDoctorSuccess","fetchAllDoctorFailed","FETCH_ALL_DOCTOR_SUCCESS","FETCH_ALL_DOCTOR_FAILED","saveDetailUser","saveDetailUserSuccess","saveDetailUserFail","SAVE_DETAIL_INFOR_DOCTOR_SUCCESS","SAVE_DETAIL_INFOR_DOCTOR_FAILED","fetchAllScheduleTime","fetchAllScheduleTimeSuccess","fetchAllScheduleTimeFailed","FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS","dataTime","FETCH_ALLCODE_SCHEDULE_TIME_FAILED","getRequiredDoctorInfor","FETCH_REQUIRED_DOCTOR_INFOR_START","resPrice","resPayment","resProvince","fetchRequiredDoctorInForSuccess","fetchRequiredDoctorInForFailed","allRequiredData","FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS","FETCH_REQUIRED_DOCTOR_INFOR_FAILED","initialState","started","systemMenuPath","contentOfConfirmModal","messageId","handleFunc","dataFunc","appReducer","APP_START_UP_COMPLETE","SET_CONTENT_OF_CONFIRM_MODAL","USER_LOGIN_FAIL","allDoctors","allScheduleTime","allRequiredDoctorInfor","adminReducer","persistCommonConfig","storage","stateReconciler","autoMergeLevel2","userPersistConfig","key","whitelist","appPersistConfig","createBrowserHistory","basename","reduxStateSyncConfig","rootReducer","combineReducers","router","connectRouter","persistReducer","userReducer","middleware","routerMiddleware","thunkMiddleware","createStateSyncMiddleware","composeEnhancers","compose","reduxStore","createStore","applyMiddleware","persistor","persistStore","CustomScrollbars","ref","React","createRef","getScrollLeft","current","getScrollTop","scrollToBottom","targetScrollTop","getScrollHeight","scrollTo","targetTop","quickScroll","scrollbars","originalTop","iteration","scroll","scrollTop","setTimeout","renderTrackHorizontal","renderTrackVertical","renderThumbHorizontal","renderThumbVertical","renderNone","disableVerticalScroll","disableHorizontalScroll","children","otherProps","autoHide","autoHideTimeout","hideTracksWhenNotNeeded","locationHelper","locationHelperBuilder","userIsAuthenticated","connectedRouterRedirect","authenticatedSelector","wrapperDisplayName","redirectPath","userIsNotAuthenticated","ownProps","getRedirectQueryParam","allowRedirectBack","KeyCodeUtils","e","UP","DOWN","TAB","ENTER","E","ESCAPE","flattenMessages","nestedMessages","prefix","Object","keys","reduce","messages","prefixedKey","assign","messages_vi","messages_en","LanguageUtils","lang","Home","linkToRedirect","to","Login","handleOnChangeInputUserName","username","handleOnChangeInputPassWord","handleLogin","errMessage","message","userData","handleKeyDown","keyCode","placeholder","onKeyDown","color","href","navigate","actions","_emitter","EventEmitter","setMaxListeners","emitter","ModalUser","toggle","toggleUserModal","isValid","arrInput","handleOnChangeInput","handleAddNewUser","listenToEmitter","on","Modal","size","ModalHeader","ModalBody","ModalFooter","Button","ModalEditUser","toggleUserEditModal","currentUser","lodash","isEmpty","UserManage","getAllUsersFromReact","arrUsers","isOpenModalUser","isOpenModalEditUser","emit","handleEditUser","userEdit","doEditUser","handleDeleteUser","MenuGroup","name","Menu","active","link","hasSubMenu","onLinkClick","data-toggle","aria-expanded","SubMenu","getItemClass","location","pathname","MenuGroupWithRouter","MenuWithRouter","SubMenuWithRouter","Navigator","expandedMenu","groupIndex","menuIndex","isMenuHasSubMenuActive","subMenus","currentPath","checkActiveMenu","menus","outerLoop","group","j","menu","isSubMenuOpen","subMenu","subMenuIndex","closeOtherExpand","withRouterInnerRef","WrappedComponent","InnerComponentWithRef","forwardRef","rest","ComponentWithRef","withRef","adminMenu","doctorMenu","Header","handleChangeLanguage","changeLanguageAppRedux","menuApp","_","title","mdParser","MarkdownIt","ManageDoctor","buildDataInput","dataInput","result","object","labelVi","labelEn","label","handleEditorChange","html","text","contentMarkdown","contentHTML","handleSaveContentMarkdown","hasOldData","description","selectedDoctor","selectedPrice","selectedPayment","selectedProvince","nameClinic","addressClinic","note","handleChangeSelect","listPayment","listPrice","listProvince","Markdown","markdown","paymentId","priceId","provinceId","Doctor_Infor","find","handleChangeSelectDoctorInfor","selectOption","stateName","stateCopy","handleOnChangeText","listDoctors","fetchAllDoctorsRedux","dataSelect","dataPriceSelect","dataPaymentSelect","dataProvinceSelect","Fragment","options","rows","height","renderHTML","render","ManageSpecialty","imageBase94","descriptionHTML","descriptionMardown","nameSpecialty","System","component","ManagerSpecialty","HomeHeader","isShowBanner","Specialty","MedicalFacility","HandBook","About","width","src","frameBorder","allow","allowFullScreen","HomeFooter","HomePage","dots","ifninite","speed","slidesToShow","slidesToScroll","DefaultClass","getInforDoctor","renderTimeBooking","moment","unix","format","locale","time","timeTypeData","dataProfile","isShowDescriptionDoctor","dataTimeSchedule","priceData","displayType","thousandSeparator","suffix","DatePicker","flatpickrNode","nodeRef","element","flatpickr","node","addEventListener","handleBlur","handlerKeyDown","which","preventDefault","valueMoment","toDate","onOpen","blur","checkDateValue","str","max","charAt","num","parseInt","isNaN","autoFormatOnChange","seperator","input","RegExp","test","substr","values","split","v","replace","join","onInputChange","DISPLAY_FORMAT","DATE_FORMAT_AUTO_FILL","converted","SEPERATOR","onInputBlur","removeEventListener","close","minDate","onClose","dateFormat","allowInput","disableMobile","Date","setHours","BookingModal","buildGenders","handleDateSelect","handleDateChange","birthday","handleChangeSelectGender","selected","selectedGender","handleConfirmBooking","getTime","timeString","buildTimeBooking","fullName","reason","timeType","closeModalBooking","gendersProps","isOpenModal","centered","backdrop","DoctorSchedule","getArrDays","allDays","add","startOf","valueOf","handleOnChangeSelect","allAvailableTime","handleClickScheduleTime","timeDisplay","DoctorExtraInfor","showHideDetailInfor","status","isShowDetailInfor","extraInfor","doctorIdFromParent","paymentData","DetailDoctor","detailDoctor","currentDoctorId","match","params","dangerouslySetInnerHTML","__html","ManageSchedule","selectedOption","handleChangeDatePicker","currentDate","handleClickBtnTime","rangeTime","isSelected","handleClickBtnSave","formatedDate","selectedTime","filter","schedule","arrSchedule","fetchAllScheduleTimeRedux","Doctor","ManagerSchedule","VerifyEmail","statusVerify","urlParams","URLSearchParams","search","token","App","handlePersistorState","bootstrapped","onBeforeLift","Promise","resolve","then","catch","exact","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","Boolean","window","hostname","getFlattenedMessages","IntlProviderWrapper","defaultLocale","ReactDOM","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister","reader","FileReader","readAsDataURL","onload","onerror","TableManagerUser","deleteUserRedux","userRedux","fetchUserRedux","freeze","ADD_USER_SUCCESS"],"mappings":"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","file":"static/js/main.5f64fc13.chunk.js","sourcesContent":["export const path = {\n    HOME: '/',\n    HOMEPAGE: '/home',\n    LOGIN: '/login',\n    LOG_OUT: '/logout',\n    CREATE_USER: '/create-user',\n    SYSTEM: '/system',\n    MANAGE_SCHEDULE: '/doctor/manage-schedule',\n    DETAIL_DOCTOR: '/detail-doctor/:id',\n    VERIFY_EMAIL_BOOKING: '/verify-booking/'\n};\n\nexport const LANGUAGES = {\n    VI: 'vi',\n    EN: 'en'\n};\n\nexport const CRUD_ACTION = {\n    CREATE: 'CREATE',\n    READ: 'READ',\n    EDIT: 'EDIT',\n    DELETE: 'DELETE',\n};\n\n\nexport const manageActions = {\n    ADD: \"ADD\",\n    EDIT: \"EDIT\",\n    DELETE: \"DELETE\"\n};\n\nexport const dateFormat = {\n    SEND_TO_SERVER: 'DD/MM/YYYY'\n};\n\nexport const YesNoObj = {\n    YES: 'Y',\n    NO: 'N'\n}\n\nexport const USER_ROLE = {\n    ADMIN: 'R1',\n    DOCTOR: 'R2',\n    PATIENT: 'R3'\n}","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n// import { getAllCodeService } from '../../../services/userService';\nimport { LANGUAGES, CRUD_ACTION } from '../../../utils/constant';\nimport CommonUtils from '../../../utils/CommonUtils';\nimport * as action from '../../../store/actions'\nimport './UserRedux.scss'\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport TableManageUser from './TableManageUser';\n// require('buffer')\n\n\n\nclass UserRedux extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            genderArr: [],\n            positionArr: [],\n            roleArr: [],\n            previewImgULR: '',\n            isOpen: false,\n\n            email: '',\n            password: '',\n            firstName: '',\n            lastName: '',\n            phoneNumber: '',\n            address: '',\n            gender: '',\n            position: '',\n            role: '',\n            avatar: '',\n            userEditId: '',\n            action: '',\n        }\n    }\n\n    componentDidMount() {\n        this.props.getGenderStart()\n        this.props.getPositionStart()\n        this.props.getRoleStart()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.genderRedux !== this.props.genderRedux) {\n            let arrGender = this.props.genderRedux\n            this.setState({\n                genderArr: arrGender,\n                gender: arrGender && arrGender.length > 0 ? arrGender[0].keyMap : ''\n            })\n        }\n\n        if (prevProps.positionRedux !== this.props.positionRedux) {\n            let arrPosition = this.props.positionRedux\n            this.setState({\n                positionArr: arrPosition,\n                position: arrPosition && arrPosition.length > 0 ? arrPosition[0].keyMap : ''\n            })\n        }\n\n        if (prevProps.roleRedux !== this.props.roleRedux) {\n            let arrRole = this.props.roleRedux\n            this.setState({\n                roleArr: arrRole,\n                role: arrRole && arrRole.length > 0 ? arrRole[0].keyMap : ''\n            })\n        }\n\n\n        // reset state\n        if (prevProps.listUsers !== this.props.listUsers) {\n            let arrGenders = this.props.genderRedux\n            let arrPositions = this.props.positionRedux\n            let arrRole = this.props.roleRedux\n\n            this.setState({\n                email: '',\n                password: '',\n                firstName: '',\n                lastName: '',\n                phoneNumber: '',\n                address: '',\n                avatar: '',\n                previewImgULR: '',\n                gender: arrGenders && arrGenders.length > 0 ? arrGenders[0].keyMap : '',\n                position: arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : '',\n                role: arrRole && arrRole.length > 0 ? arrRole[0].keyMap : '',\n                action: CRUD_ACTION.CREATE,\n            })\n        }\n\n    }\n\n    handleOnchangeImage = async (event) => {\n        let data = event.target.files\n        let file = data[0]\n        if (file) {\n            let base64 = await CommonUtils.getBase64(file)\n            // console.log(\"test base64: \", base64)\n            let objectUrl = URL.createObjectURL(file)\n            this.setState({\n                previewImgULR: objectUrl,\n                avatar: base64\n            })\n        }\n    }\n\n    openPreviewImage = () => {\n        if (!this.state.previewImgULR)\n            return\n        this.setState({ isOpen: true })\n    }\n\n    onChangeInput = (event, id) => {\n        let copyState = { ...this.state }\n        copyState[id] = event.target.value\n        this.setState({\n            ...copyState\n        }, () => {\n        })\n    }\n\n    handleSaveUser = () => {\n        // this.funcTestInput()\n        // console.log(\"handle Save user: \", this.state)\n        // console.log(\"handle user.gender: \", this.state.gender)\n        // console.log(\"handle user.position: \", this.state.position)\n        // console.log(\"handle user.role: \", this.state.role)\n        let isValid = this.checkValidateInput()\n        if (isValid === false) {\n            // console.log(\"isValid === false\")\n            return\n        }\n\n        if (this.state.action === CRUD_ACTION.CREATE) {\n            this.props.createNewUser({\n                email: this.state.email,\n                password: this.state.password,\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                address: this.state.address,\n                phonenumber: this.state.phoneNumber,\n                gender: this.state.gender,\n                roleId: this.state.role,\n                positionId: this.state.position,\n                avatar: this.state.avatar\n            })\n        }\n        if (this.state.action === CRUD_ACTION.EDIT) {\n            this.props.editUser({\n                id: this.state.userEditId,\n                email: this.state.email,\n                password: this.state.password,\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                address: this.state.address,\n                phonenumber: this.state.phoneNumber,\n                gender: this.state.gender,\n                roleId: this.state.role,\n                positionId: this.state.position,\n                avatar: this.state.avatar\n            })\n        }\n    }\n\n    checkValidateInput = () => {\n        let isValidate = true\n        let arrCheck = ['email', 'password', 'firstName', 'lastName', 'phoneNumber', 'address']\n        for (let i = 0; i < arrCheck.length; i++) {\n            if (!this.state[arrCheck[i]]) {\n                isValidate = false\n                alert(\"missing parameter: \" + arrCheck[i])\n                break\n            }\n        }\n        return isValidate\n    }\n\n    handleEditUserFromParent = async (user) => {\n        // this.funcTestInput()\n        // console.log(\"check handle edituser from parent\", user)\n        let imageBase64 = ''\n        if (user.image) {\n            imageBase64 = new Buffer(user.image, 'base64').toString('binary')\n        }\n\n        this.setState({\n            userEditId: user.id,\n            email: user.email,\n            password: 'hashcode',\n            firstName: user.firstName,\n            lastName: user.lastName,\n            phoneNumber: user.phonenumber,\n            address: user.address,\n            gender: user.gender,\n            position: user.positionId,\n            role: user.roleId,\n            avatar: '',\n            previewImgULR: imageBase64,\n            action: CRUD_ACTION.EDIT\n        })\n        console.log(this.state)\n\n    }\n\n    funcTestInput = () => {\n        console.log(\"Test input: \", this.state)\n    }\n\n    render() {\n        let { email, password, firstName, lastName, phoneNumber, address, gender, position, role, avatar } = this.state\n        let language = this.props.language\n        let genders = this.state.genderArr\n        let positions = this.state.positionArr\n        let roles = this.state.roleArr\n\n        // console.log(\"state render \", this.state)\n        return (\n            <div className='user-redux-container'>\n                <div className='title'>User redux</div>\n                <div className='user-redux-body'>\n                    <div className='container'>\n                        <div className='row'>\n                            <div className='col-12 header-redux' ><FormattedMessage id=\"manage-user.user\" /></div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.email\" /></label>\n                                <input className='form-control' type='email'\n                                    value={email}\n                                    onChange={(event) => this.onChangeInput(event, 'email')}\n                                    disabled={this.state.action === CRUD_ACTION.EDIT}\n                                />\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.password\" /></label>\n                                <input className='form-control' type='password'\n                                    value={password}\n                                    onChange={(event) => this.onChangeInput(event, 'password')}\n                                    disabled={this.state.action === CRUD_ACTION.EDIT}\n                                />\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.first-name\" /></label>\n                                <input className='form-control' type='text'\n                                    value={firstName}\n                                    onChange={(event) => this.onChangeInput(event, 'firstName')}\n                                />\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.last-name\" /></label>\n                                <input className='form-control' type='text'\n                                    value={lastName}\n                                    onChange={(event) => this.onChangeInput(event, 'lastName')}\n                                />\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.phone-number\" /></label>\n                                <input className='form-control' type='text'\n                                    value={phoneNumber}\n                                    onChange={(event) => this.onChangeInput(event, 'phoneNumber')}\n                                />\n                            </div>\n                            <div className='col-9'>\n                                <label><FormattedMessage id=\"manage-user.address\" /></label>\n                                <input className='form-control' type='text'\n                                    value={address}\n                                    onChange={(event) => this.onChangeInput(event, 'address')}\n                                />\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.gender\" /></label>\n                                <select className='form-control'\n                                    onChange={(event) => this.onChangeInput(event, 'gender')}\n                                    value={gender}\n                                >\n                                    {genders && genders.length > 0 &&\n                                        genders.map((item, index) => {\n                                            return (\n                                                <option key={index} value={item.keyMap}>\n                                                    {language === LANGUAGES.VI ? item.valueVi : item.valueEn}\n                                                </option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.position\" /></label>\n                                <select className='form-control'\n                                    onChange={(event) => this.onChangeInput(event, 'position')}\n                                    value={position}\n                                >\n                                    {\n                                        positions && positions.length > 0 &&\n                                        positions.map((item, index) => {\n                                            return (\n                                                <option key={index} value={item.keyMap}>\n                                                    {language === LANGUAGES.VI ? item.valueVi : item.valueEn}\n                                                </option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.role\" /></label>\n                                <select className='form-control'\n                                    onChange={(event) => this.onChangeInput(event, 'role')}\n                                    value={role}\n                                >\n                                    {\n                                        roles && roles.length > 0 &&\n                                        roles.map((item, index) => {\n                                            return (\n                                                <option key={index} value={item.keyMap}>\n                                                    {language === LANGUAGES.VI ? item.valueVi : item.valueEn}\n                                                </option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.image\" /></label>\n                                <div className='preview-img-container'>\n                                    <input id='previewImg' type='file' hidden\n                                        onChange={(event) => this.handleOnchangeImage(event)}\n                                    />\n                                    <label className='lable-update' htmlFor='previewImg'>Tải ảnh <i className='fas fa-upload'></i></label>\n                                    <div className='preview-image'\n                                        style={{ backgroundImage: `url(\"${this.state.previewImgULR}\")` }}\n                                        onClick={() => this.openPreviewImage()}\n                                    >\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='col-12 button'>\n                                <button\n                                    className={this.state.action === CRUD_ACTION.EDIT ? 'btn btn-warning' : 'btn btn-primary'}\n                                    onClick={() => this.handleSaveUser()}\n                                >\n                                    <FormattedMessage id={this.state.action === CRUD_ACTION.EDIT ? \"manage-user.edit\" : \"manage-user.save\"} />\n                                </button>\n                            </div>\n                            <div className='col-12'>\n                                <TableManageUser\n                                    handleEditUserFromParent={this.handleEditUserFromParent}\n                                />\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                {\n                    this.state.isOpen === true &&\n                    <Lightbox\n                        mainSrc={this.state.previewImgULR}\n                        onCloseRequest={() => this.setState({ isOpen: false })}\n                    />\n                }\n            </div>\n        )\n    }\n\n}\n\n\nconst mapStateToProps = state => {\n    // console.log(\"adminAction, state of redux: \", state)\n    // console.log(\"Mapstatetoprops\")\n\n    return {\n        language: state.app.language,\n        genderRedux: state.admin.genders,\n        isLoadingGenderRedux: state.admin.isLoadingGender,\n        positionRedux: state.admin.positions,\n        roleRedux: state.admin.roles,\n        listUsers: state.admin.users\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    // console.log(\"MapdispatchToProps\")\n    return {\n        getGenderStart: () => dispatch(action.fetchGenderStart()),\n        getPositionStart: () => dispatch(action.fetchPositionStart()),\n        getRoleStart: () => dispatch(action.fetchRoleStart()),\n        createNewUser: (data) => dispatch(action.createNewUser(data)),\n        editUser: (data) => dispatch(action.editUser(data))\n        // fetchUserRedux: () => dispatch(action.fetchAllUserStart())\n        // processLogout: () => dispatch(actions.processLogout()),\n        // changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserRedux);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport * as action from '../../../store/actions'\nimport { LANGUAGES } from '../../../utils/constant';\nimport { withRouter } from 'react-router';\nimport { testAPI } from '../../../services/userService';\n\n// import { FormattedMessage } from 'react-intl';\n\nimport Slider from \"react-slick\"\nimport { FormattedMessage } from 'react-intl';\n\n\n\n// import specialtyImg from '../../../assets/specialty/co-xuong-khop.jpeg'\n\nclass OutStandingDoctor extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            arrDoctor: []\n        }\n    }\n\n    componentDidUpdate(preProps, preState, snapshot) {\n        if (preProps.topDoctorsRedux !== this.props.topDoctorsRedux) {\n            this.setState({\n                arrDoctor: this.props.topDoctorsRedux\n            })\n        }\n\n\n    }\n\n    componentDidMount() {\n        this.props.loadTopDoctor()\n        testAPI()\n    }\n\n\n    handleViewDetailDoctor(doctor) {\n        this.props.history.push(`/detail-doctor/${doctor.id}`)\n    }\n    render() {\n        let arrDoctor = this.state.arrDoctor\n        let { language } = this.props\n        console.log(\"test language: \", language)\n        console.log(LANGUAGES.VI, LANGUAGES.EN)\n        // arrDoctor = arrDoctor.concat(arrDoctor).concat(arrDoctor)\n        console.log('arrDoctor: ', arrDoctor)\n        return (\n            <div className='section-share section-outstanding-doctor'>\n                <div className='section-container'>\n                    <div className='section-header'>\n                        <span className='title-section'><FormattedMessage id=\"homepage.oustanding-doctor\" /></span>\n                        <button className='button-section'><FormattedMessage id=\"homepage.more-infor\" /></button>\n                    </div>\n\n                    <div className='section-body'>\n                        <Slider {...this.props.settings}>\n                            {\n                                arrDoctor.map((item, index) => {\n                                    let imageBase64 = ''\n                                    if (item.image) {\n                                        imageBase64 = new Buffer(item.image, 'base64').toString('binary')\n                                    }\n                                    let nameVi = `${item.positionData.valueVi}, ${item.lastName} ${item.firstName}`\n                                    let nameEn = `${item.positionData.valueEn},  ${item.firstName} ${item.lastName}`\n                                    // let email = item.email\n                                    console.log(item)\n                                    return (\n                                        <div className='section-customize' key={index} onClick={() => this.handleViewDetailDoctor(item)}>\n                                            <div className='customize-boder'>\n                                                <div className='outer-bg'>\n                                                    <div className='bg-image section-outstanding-doctor'\n                                                        style={{ backgroundImage: `url(${imageBase64})` }}\n                                                    >\n                                                    </div>\n                                                </div>\n                                                <div className='position text-center'>\n                                                    <div>\n                                                        {\n                                                            language === LANGUAGES.VI ? nameVi : nameEn\n                                                        }\n                                                    </div>\n                                                    <div>Cơ xương khớp</div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    )\n                                })\n                            }\n                        </Slider>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language,\n        topDoctorsRedux: state.admin.topDoctors\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        loadTopDoctor: () => dispatch(action.fetchTopDoctor()),\n        changeLanguage: () => dispatch(action.changeLanguageApp())\n    };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(OutStandingDoctor));\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n// import { getAllCodeService } from '../../../services/userService';\nimport { LANGUAGES, CRUD_ACTION } from '../../../utils/constant';\nimport CommonUtils from '../../../utils/CommonUtils';\nimport * as action from '../../../store/actions'\nimport './UserRedux.scss'\nimport Lightbox from 'react-image-lightbox';\nimport 'react-image-lightbox/style.css';\nimport TableManageUser from './TableManageUser';\nimport { toast } from 'react-toastify';\n// require('buffer')\n\n\n\nclass UserReduxIsLoginFalse extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            genderArr: [],\n            positionArr: [],\n            roleArr: [],\n            previewImgULR: '',\n            isOpen: false,\n\n            email: '',\n            password: '',\n            firstName: '',\n            lastName: '',\n            phoneNumber: '',\n            address: '',\n            gender: '',\n            position: '',\n            role: '',\n            avatar: '',\n            userEditId: '',\n            action: '',\n        }\n    }\n\n    componentDidMount() {\n        this.props.getGenderStart()\n        this.props.getPositionStart()\n        this.props.getRoleStart()\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.genderRedux !== this.props.genderRedux) {\n            let arrGender = this.props.genderRedux\n            this.setState({\n                genderArr: arrGender,\n                gender: arrGender && arrGender.length > 0 ? arrGender[0].keyMap : ''\n            })\n        }\n\n        if (prevProps.positionRedux !== this.props.positionRedux) {\n            let arrPosition = this.props.positionRedux\n            this.setState({\n                positionArr: arrPosition,\n                position: arrPosition && arrPosition.length > 0 ? arrPosition[0].keyMap : ''\n            })\n        }\n\n        if (prevProps.roleRedux !== this.props.roleRedux) {\n            let arrRole = this.props.roleRedux\n            this.setState({\n                roleArr: arrRole,\n                role: arrRole && arrRole.length > 0 ? arrRole[0].keyMap : ''\n            })\n        }\n\n\n        // reset state\n        if (prevProps.listUsers !== this.props.listUsers) {\n            let arrGenders = this.props.genderRedux\n            let arrPositions = this.props.positionRedux\n            let arrRole = this.props.roleRedux\n\n            this.setState({\n                email: '',\n                password: '',\n                firstName: '',\n                lastName: '',\n                phoneNumber: '',\n                address: '',\n                avatar: '',\n                previewImgULR: '',\n                gender: arrGenders && arrGenders.length > 0 ? arrGenders[0].keyMap : '',\n                position: arrPositions && arrPositions.length > 0 ? arrPositions[0].keyMap : '',\n                role: arrRole && arrRole.length > 0 ? arrRole[0].keyMap : '',\n                action: CRUD_ACTION.CREATE,\n            })\n        }\n\n    }\n\n    handleOnchangeImage = async (event) => {\n        let data = event.target.files\n        let file = data[0]\n        if (file) {\n            let base64 = await CommonUtils.getBase64(file)\n            // console.log(\"test base64: \", base64)\n            let objectUrl = URL.createObjectURL(file)\n            this.setState({\n                previewImgULR: objectUrl,\n                avatar: base64\n            })\n        }\n    }\n\n    openPreviewImage = () => {\n        if (!this.state.previewImgULR)\n            return\n        this.setState({ isOpen: true })\n    }\n\n    onChangeInput = (event, id) => {\n        let copyState = { ...this.state }\n        copyState[id] = event.target.value\n        this.setState({\n            ...copyState\n        }, () => {\n        })\n    }\n\n    handleSaveUser = () => {\n        // this.funcTestInput()\n        console.log(\"handle Save user: \", this.state)\n        // console.log(\"handle user.gender: \", this.state.gender)\n        // console.log(\"handle user.position: \", this.state.position)\n        // console.log(\"handle user.role: \", this.state.role)\n        let isValid = this.checkValidateInput()\n        if (isValid === false) {\n            // console.log(\"isValid === false\")\n            return\n        }\n\n        if (true) {\n            this.props.createNewUser({\n                email: this.state.email,\n                password: this.state.password,\n                firstName: this.state.firstName,\n                lastName: this.state.lastName,\n                address: this.state.address,\n                phonenumber: this.state.phoneNumber,\n                gender: this.state.gender,\n                roleId: this.state.role,\n                positionId: this.state.position,\n                avatar: this.state.avatar\n            })\n        }\n    }\n\n    checkValidateInput = () => {\n        let isValidate = true\n        let arrCheck = ['email', 'password', 'firstName', 'lastName', 'phoneNumber', 'address']\n        for (let i = 0; i < arrCheck.length; i++) {\n            if (!this.state[arrCheck[i]]) {\n                isValidate = false\n                alert(\"missing parameter: \" + arrCheck[i])\n                break\n            }\n        }\n        if (this.state.role !== 'R2') {\n            toast.error(\"Quyền quản trị viên, bệnh nhân không khả dụng\")\n            isValidate = false\n        }\n        return isValidate\n    }\n\n    handleEditUserFromParent = async (user) => {\n        // this.funcTestInput()\n        // console.log(\"check handle edituser from parent\", user)\n        let imageBase64 = ''\n        if (user.image) {\n            imageBase64 = new Buffer(user.image, 'base64').toString('binary')\n        }\n\n        this.setState({\n            userEditId: user.id,\n            email: user.email,\n            password: 'hashcode',\n            firstName: user.firstName,\n            lastName: user.lastName,\n            phoneNumber: user.phonenumber,\n            address: user.address,\n            gender: user.gender,\n            position: user.positionId,\n            role: user.roleId,\n            avatar: '',\n            previewImgULR: imageBase64,\n            action: CRUD_ACTION.EDIT\n        })\n        console.log(this.state)\n\n    }\n\n    funcTestInput = () => {\n        console.log(\"Test input: \", this.state)\n    }\n\n    render() {\n        let { email, password, firstName, lastName, phoneNumber, address, gender, position, role, avatar } = this.state\n        let language = this.props.language\n        let genders = this.state.genderArr\n        let positions = this.state.positionArr\n        let roles = this.state.roleArr\n        // console.log(\"roles: \", roles)\n\n        // console.log(\"state render \", this.state)\n        return (\n            <div className='user-redux-container'>\n                <div className='title'>User redux</div>\n                <div className='user-redux-body'>\n                    <div className='container'>\n                        <div className='row'>\n                            <div className='col-12 header-redux' ><FormattedMessage id=\"manage-user.user\" /></div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.email\" /></label>\n                                <input className='form-control' type='email'\n                                    value={email}\n                                    onChange={(event) => this.onChangeInput(event, 'email')}\n                                    disabled={this.state.action === CRUD_ACTION.EDIT}\n                                />\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.password\" /></label>\n                                <input className='form-control' type='password'\n                                    value={password}\n                                    onChange={(event) => this.onChangeInput(event, 'password')}\n                                    disabled={this.state.action === CRUD_ACTION.EDIT}\n                                />\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.first-name\" /></label>\n                                <input className='form-control' type='text'\n                                    value={firstName}\n                                    onChange={(event) => this.onChangeInput(event, 'firstName')}\n                                />\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.last-name\" /></label>\n                                <input className='form-control' type='text'\n                                    value={lastName}\n                                    onChange={(event) => this.onChangeInput(event, 'lastName')}\n                                />\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.phone-number\" /></label>\n                                <input className='form-control' type='text'\n                                    value={phoneNumber}\n                                    onChange={(event) => this.onChangeInput(event, 'phoneNumber')}\n                                />\n                            </div>\n                            <div className='col-9'>\n                                <label><FormattedMessage id=\"manage-user.address\" /></label>\n                                <input className='form-control' type='text'\n                                    value={address}\n                                    onChange={(event) => this.onChangeInput(event, 'address')}\n                                />\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.gender\" /></label>\n                                <select className='form-control'\n                                    onChange={(event) => this.onChangeInput(event, 'gender')}\n                                    value={gender}\n                                >\n                                    {genders && genders.length > 0 &&\n                                        genders.map((item, index) => {\n                                            return (\n                                                <option key={index} value={item.keyMap}>\n                                                    {language === LANGUAGES.VI ? item.valueVi : item.valueEn}\n                                                </option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.position\" /></label>\n                                <select className='form-control'\n                                    onChange={(event) => this.onChangeInput(event, 'position')}\n                                    value={position}\n                                >\n                                    {\n                                        positions && positions.length > 0 &&\n                                        positions.map((item, index) => {\n                                            return (\n                                                <option key={index} value={item.keyMap}>\n                                                    {language === LANGUAGES.VI ? item.valueVi : item.valueEn}\n                                                </option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.role\" /></label>\n                                <select className='form-control'\n                                    onChange={(event) => this.onChangeInput(event, 'role')}\n                                    value={role}\n                                >\n                                    {\n                                        roles && roles.length > 0 &&\n                                        roles.map((item, index) => {\n                                            return (\n                                                <option key={index} value={item.keyMap}>\n                                                    {language === LANGUAGES.VI ? item.valueVi : item.valueEn}\n                                                </option>\n                                            )\n                                        })\n                                    }\n                                </select>\n                            </div>\n                            <div className='col-3'>\n                                <label><FormattedMessage id=\"manage-user.image\" /></label>\n                                <div className='preview-img-container'>\n                                    <input id='previewImg' type='file' hidden\n                                        onChange={(event) => this.handleOnchangeImage(event)}\n                                    />\n                                    <label className='lable-update' htmlFor='previewImg'>Tải ảnh <i className='fas fa-upload'></i></label>\n                                    <div className='preview-image'\n                                        style={{ backgroundImage: `url(\"${this.state.previewImgULR}\")` }}\n                                        onClick={() => this.openPreviewImage()}\n                                    >\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='col-12 button'>\n                                <button\n                                    className={this.state.action === CRUD_ACTION.EDIT ? 'btn btn-warning' : 'btn btn-primary'}\n                                    onClick={() => this.handleSaveUser()}\n                                >\n                                    <FormattedMessage id={this.state.action === CRUD_ACTION.EDIT ? \"manage-user.edit\" : \"manage-user.save\"} />\n                                </button>\n                            </div>\n                            {/* <div className='col-12'>\n                                <TableManageUser\n                                    handleEditUserFromParent={this.handleEditUserFromParent}\n                                />\n                            </div> */}\n                        </div>\n                    </div>\n                </div>\n\n                {\n                    this.state.isOpen === true &&\n                    <Lightbox\n                        mainSrc={this.state.previewImgULR}\n                        onCloseRequest={() => this.setState({ isOpen: false })}\n                    />\n                }\n            </div>\n        )\n    }\n\n}\n\n\nconst mapStateToProps = state => {\n    // console.log(\"adminAction, state of redux: \", state)\n    // console.log(\"Mapstatetoprops\")\n\n    return {\n        language: state.app.language,\n        genderRedux: state.admin.genders,\n        isLoadingGenderRedux: state.admin.isLoadingGender,\n        positionRedux: state.admin.positions,\n        roleRedux: state.admin.roles,\n        listUsers: state.admin.users\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    // console.log(\"MapdispatchToProps\")\n    return {\n        getGenderStart: () => dispatch(action.fetchGenderStart()),\n        getPositionStart: () => dispatch(action.fetchPositionStart()),\n        getRoleStart: () => dispatch(action.fetchRoleStart()),\n        createNewUser: (data) => dispatch(action.createNewUser(data)),\n        editUser: (data) => dispatch(action.editUser(data))\n        // fetchUserReduxIsLoginFalse: () => dispatch(action.fetchAllUserStart())\n        // processLogout: () => dispatch(actions.processLogout()),\n        // changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserReduxIsLoginFalse);\n","import axios from 'axios';\nimport _ from 'lodash';\n\n// console.log(process.env.REACT_APP_BACKEND_URL)\n\nconst instance = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URL,\n    // withCredentials: true\n});\n\ninstance.interceptors.response.use(\n    (response) => {\n        // Thrown error for request with OK status code\n        const { data } = response;\n        return response.data;\n    }\n);\n\nexport default instance;\n","import axios from '../axios'\n\nconst handleLoginApi = (userEmail, userPassword) => {\n    return axios.post('/api/login', { email: userEmail, password: userPassword })\n}\n\nconst getAllUsers = (inputId) => {\n    return axios.get(`/api/get-all-users?id=${inputId}`)\n}\n\nconst getTopDoctorService = (limit) => {\n    // console.log(\"test limit\", limit)\n    return axios.get(`/api/top-doctor-home?limit=${limit}`)\n}\nconst getAllDoctors = () => {\n    return axios.get(`/api/get-all-doctors`)\n}\n\nconst createNewUserService = (data) => {\n    return axios.post('/api/create-new-user', data)\n}\n\nconst deleteUserService = (userId) => {\n    return axios.delete('/api/delete-user', {\n        data: {\n            id: userId\n        }\n    })\n}\n\nconst getAllCodeService = (inputType) => {\n    return axios.get(`/api/allcode?type=${inputType}`)\n}\n\nconst editUserService = (inputData) => {\n    return axios.put('/api/edit-user', inputData)\n}\n\nconst saveDetailInforDoctor = (inputData) => {\n    return axios.post('/api/save-infor-doctor', inputData)\n}\n\nconst getDetailInforDoctor = (inputId) => {\n    // console.log(\"inputId: \", inputId)\n    return axios.get(`/api/get-detail-doctor-by-id?id=${inputId}`)\n}\n\nconst saveBulkScheduleDoctor = (data) => {\n    // console.log(\"save\")\n    return axios.post('/api/bulk-create-schedule', data)\n}\n\nconst getScheduleDoctorByDate = (doctorId, date) => {\n    // console.log(\"doctorId: \", doctorId)\n    return axios.get(`api/get-schedule-doctor-by-date?doctorId=${doctorId}&date=${date}`)\n}\n\nconst getExtraInforDoctorById = (doctorId) => {\n    // console.log(\"doctorId: \", doctorId)\n    return axios.get(`/api/get-extra-infor-doctor-by-id?id=${doctorId}`)\n}\n\nconst getProfileDoctorById = (doctorId) => {\n    // console.log(\"doctorId: \", doctorId)\n    return axios.get(`/api/get-profile-doctor-by-id?id=${doctorId}`)\n}\n\nconst postBookAppointment = (data) => {\n    // console.log(\"save\")\n    return axios.post('/api/patient-book-appointment', data)\n}\n\n\nconst postVerifyBookAppointment = (data) => {\n    // console.log(\"data: \", data)\n    return axios.post('/api/verify-book-appointment', data)\n}\n\nconst testAPI = () => {\n    return axios.get('/api/testAPI')\n}\n\nexport {\n    testAPI,\n    handleLoginApi,\n    getAllUsers,\n    createNewUserService,\n    deleteUserService,\n    editUserService,\n    getAllCodeService,\n    getTopDoctorService,\n    getAllDoctors,\n    saveDetailInforDoctor,\n    getDetailInforDoctor,\n    saveBulkScheduleDoctor,\n    getScheduleDoctorByDate,\n    getExtraInforDoctorById,\n    getProfileDoctorById,\n    postBookAppointment,\n    postVerifyBookAppointment\n}","import actionTypes from './actionTypes';\n\nexport const appStartUpComplete = () => ({\n    type: actionTypes.APP_START_UP_COMPLETE\n});\n\nexport const setContentOfConfirmModal = (contentOfConfirmModal) => ({\n    type: actionTypes.SET_CONTENT_OF_CONFIRM_MODAL,\n    contentOfConfirmModal: contentOfConfirmModal\n});\n\nexport const changeLanguageApp = (languageInput) => ({\n    type: actionTypes.CHANGELANGUAGE,\n    language: languageInput\n})","import actionTypes from './actionTypes';\n\nexport const addUserSuccess = () => ({\n    type: actionTypes.ADD_USER_SUCCESS\n})\n\nexport const userLoginSuccess = (userInfo) => ({\n    type: actionTypes.USER_LOGIN_SUCCESS,\n    userInfo: userInfo\n})\nexport const userLoginFail = () => ({\n    type: actionTypes.USER_LOGIN_FAIL\n})\n\nexport const processLogout = () => ({\n    type: actionTypes.PROCESS_LOGOUT\n})","import { escape, reject } from 'lodash';\nimport {\n    getAllUsers, getAllCodeService, createNewUserService,\n    deleteUserService, editUserService, getTopDoctorService,\n    getAllDoctors, saveDetailInforDoctor\n} from '../../services/userService';\nimport actionTypes from './actionTypes';\nimport { toast } from 'react-toastify';\n\n// export const fetchGenderStart = () => ({\n//     type: actionTypes.ADD_USER_START\n// })\n\nexport const fetchGenderStart = () => {\n    return async (dispatch, getState) => {\n        try {\n            dispatch({ type: actionTypes.FETCH_GENDER_START })\n            let res = await getAllCodeService('gender')\n            if (res && res.errCode === 0) {\n                // console.log(res)\n                dispatch(fetchGenderSuccess(res.data))\n            } else {\n                dispatch(fetchGenderFailed())\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n}\n\nexport const fetchGenderSuccess = (genderData) => ({\n    type: actionTypes.FETCH_GENDER_SUCCESS,\n    data: genderData\n})\nexport const fetchGenderFailed = () => ({\n    type: actionTypes.FETCH_GENDER_FAILED\n})\n\n\n\n\nexport const fetchPositionStart = () => {\n    return async (dispatch, getState) => {\n        try {\n            dispatch({ type: actionTypes.FETCH_POSITION_START })\n            let res = await getAllCodeService('position')\n            if (res && res.errCode === 0) {\n                // console.log(res)\n                dispatch(fetchPositionSuccess(res.data))\n            } else {\n                dispatch(fetchPositionFailed())\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n}\n\nexport const fetchPositionSuccess = (positionData) => ({\n    type: actionTypes.FETCH_POSITION_SUCCESS,\n    data: positionData\n})\nexport const fetchPositionFailed = () => ({\n    type: actionTypes.FETCH_POSITION_FAILED\n})\n\n\n\n\nexport const fetchRoleStart = () => {\n    return async (dispatch, getState) => {\n        try {\n            dispatch({ type: actionTypes.FETCH_ROLE_START })\n            let res = await getAllCodeService('role')\n            if (res && res.errCode === 0) {\n                dispatch(fetchRoleSuccess(res.data))\n            } else {\n                dispatch(fetchRoleFailed())\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n}\n\nexport const fetchRoleSuccess = (roleData) => ({\n    type: actionTypes.FETCH_ROLE_SUCCESS,\n    data: roleData\n})\nexport const fetchRoleFailed = () => ({\n    type: actionTypes.FETCH_ROLE_FAILED\n})\n\nexport const createNewUser = (data) => {\n    return async (dispatch, getState) => {\n        try {\n            // dispatch({ type: actionTypes.FETCH_ROLE_START })\n            let res = await createNewUserService(data)\n            if (res && res.errCode === 0) {\n                console.log(\"Create user success\")\n                toast.success(\"Create user successed\")\n                dispatch(saveUserSuccess())\n                dispatch(fetchAllUserStart())\n            } else {\n                console.log(\"Create user failed\")\n                toast.warn(\"Create user failed\")\n                dispatch(saveUserFailed())\n            }\n            reject()\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n}\n\n\nexport const saveUserSuccess = () => ({\n    type: actionTypes.CREATE_USER_SUCCES\n})\nexport const saveUserFailed = () => ({\n    type: actionTypes.CREATE_USER_FAILED\n})\n\n\n\nexport const fetchAllUserStart = () => {\n    return async (dispatch, getState) => {\n        try {\n            // dispatch({ type: actionTypes.FETCH_ALL_USER_SUCCESS })\n            let res = await getAllUsers('ALL')\n            if (res && res.errCode === 0) {\n                dispatch(fetchAllUserSuccess(res.users.reverse()))\n            } else {\n                dispatch(fetchAllUserFailed())\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n}\n\nexport const fetchAllUserSuccess = (data) => ({\n    type: actionTypes.FETCH_ALL_USER_SUCCESS,\n    users: data\n})\nexport const fetchAllUserFailed = () => ({\n    type: actionTypes.FETCH_ALL_USER_FAILED\n})\n\nexport const deleteUser = (data) => {\n    return async (dispatch, getState) => {\n        try {\n            let res = await deleteUserService(data)\n            if (res && res.errCode === 0) {\n                toast.success(\"Delete user success\")\n                dispatch(deleteUserSuccess())\n                dispatch(fetchAllUserStart())\n            } else {\n                toast.success(\"Delete user failed\")\n                dispatch(deleteUserFailed())\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n}\n\nexport const deleteUserSuccess = () => ({\n    type: actionTypes.DELETE_USER_SUCCES\n})\n\n\nexport const deleteUserFailed = () => ({\n    type: actionTypes.DELETE_USER_FAILED\n})\n\nexport const editUser = (data) => {\n    return async (dispatch, getState) => {\n        try {\n            // console.log(\"data: \", data)\n            let res = await editUserService(data)\n            if (res && res.errCode === 0) {\n                toast.success(\"Edit user success\")\n                dispatch(editUserSuccess())\n                dispatch(fetchAllUserStart())\n            } else {\n                toast.success(\"Edit user failed\")\n                dispatch(editUserFailed())\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n}\n\nexport const editUserSuccess = () => ({\n    type: actionTypes.EDIT_USER_SUCCES\n})\n\n\nexport const editUserFailed = () => ({\n    type: actionTypes.EDIT_USER_FAILED\n})\n\n\nexport const fetchTopDoctor = () => {\n    return async (dispatch, getState) => {\n        try {\n            // dispatch({ type: actionTypes.FETCH_ALL_USER_SUCCESS })\n            let res = await getTopDoctorService(5)\n            // console.log('check res fetch doctor: ', res)\n            if (res && res.errCode === 0) {\n                dispatch(fetchTopDoctorSuccess(res.data))\n            } else {\n                dispatch(fetchTopDoctorFailed())\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n}\n\nexport const fetchTopDoctorSuccess = (data) => ({\n    type: actionTypes.FETCH_TOP_DOCTOR_SUCCESS,\n    dataDoctors: data\n})\nexport const fetchTopDoctorFailed = () => ({\n    type: actionTypes.FETCH_TOP_DOCTOR_FAILED\n})\n\n\nexport const fetchAllDoctor = () => {\n    return async (dispatch, getState) => {\n        try {\n            let res = await getAllDoctors()\n            // console.log(\"fetch all user: \", res)\n            if (res && res.errCode === 0) {\n                // console.log(\"rest === 0\", res.data)\n                dispatch(fetchAllDoctorSuccess(res.data))\n            } else {\n                dispatch(fetchAllDoctorFailed())\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n}\n\nexport const fetchAllDoctorSuccess = (data) => ({\n    type: actionTypes.FETCH_ALL_DOCTOR_SUCCESS,\n    dataDoctors: data,\n})\nexport const fetchAllDoctorFailed = () => ({\n    type: actionTypes.FETCH_ALL_DOCTOR_FAILED\n})\n\nexport const saveDetailUser = (data) => {\n    return async (dispatch, getState) => {\n        try {\n            let res = await saveDetailInforDoctor(data)\n            // console.log(\"fetch all user: \", res)\n            if (res && res.errCode === 0) {\n                // console.log(\"rest === 0\", res.data)\n                toast.success(\"Save detail doctor success\")\n                dispatch(saveDetailUserSuccess())\n            } else {\n                toast.error(\"Save detail doctor failed\")\n                dispatch(saveDetailUserFail())\n            }\n        } catch (e) {\n            toast.error(\"Save detail doctor failed\")\n            console.log(e)\n        }\n\n    }\n}\n\nexport const saveDetailUserSuccess = () => ({\n    type: actionTypes.SAVE_DETAIL_INFOR_DOCTOR_SUCCESS\n})\nexport const saveDetailUserFail = () => ({\n    type: actionTypes.SAVE_DETAIL_INFOR_DOCTOR_FAILED\n})\n\n\nexport const fetchAllScheduleTime = (type) => {\n    return async (dispatch, getState) => {\n        try {\n            let res = await getAllCodeService('TIME')\n            // console.log(\"fetch all user: \", res)\n            if (res && res.errCode === 0) {\n                // console.log(\"rest === 0\", res.data)\n                dispatch(fetchAllScheduleTimeSuccess(res.data))\n            } else {\n                dispatch(fetchAllScheduleTimeFailed())\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n}\n\nexport const fetchAllScheduleTimeSuccess = (data) => ({\n    type: actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS,\n    dataTime: data,\n})\nexport const fetchAllScheduleTimeFailed = () => ({\n    type: actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAILED\n})\n\nexport const getRequiredDoctorInfor = (type) => {\n    return async (dispatch, getState) => {\n        try {\n            dispatch({ type: actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_START })\n            let resPrice = await getAllCodeService('PRICE')\n            let resPayment = await getAllCodeService('PAYMENT')\n            let resProvince = await getAllCodeService('PROVINCE')\n            if (resPrice && resPrice.errCode === 0 &&\n                resPayment && resPayment.errCode === 0 &&\n                resProvince && resProvince.errCode === 0) {\n                let data = {\n                    resPrice: resPrice.data,\n                    resPayment: resPayment.data,\n                    resProvince: resProvince.data,\n                }\n                dispatch(fetchRequiredDoctorInForSuccess(data))\n            } else {\n                dispatch(fetchRequiredDoctorInForFailed())\n            }\n        } catch (e) {\n            console.log(e)\n        }\n\n    }\n}\n\nexport const fetchRequiredDoctorInForSuccess = (allRequiredData) => ({\n    type: actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS,\n    allRequiredData: allRequiredData\n})\nexport const fetchRequiredDoctorInForFailed = () => ({\n    type: actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_FAILED\n})","import actionTypes from '../actions/actionTypes';\n\nconst initContentOfConfirmModal = {\n    isOpen: false,\n    messageId: \"\",\n    handleFunc: null,\n    dataFunc: null\n}\n\nconst initialState = {\n    started: true,\n    language: 'vi',\n    systemMenuPath: '/system/user-manage',\n    contentOfConfirmModal: {\n        ...initContentOfConfirmModal\n    }\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.APP_START_UP_COMPLETE:\n            return {\n                ...state,\n                started: true\n            }\n\n        case actionTypes.CHANGELANGUAGE:\n            return {\n                ...state,\n                language: action.language\n            }\n        case actionTypes.SET_CONTENT_OF_CONFIRM_MODAL:\n            return {\n                ...state,\n                contentOfConfirmModal: {\n                    ...state.contentOfConfirmModal,\n                    ...action.contentOfConfirmModal\n                }\n            }\n        default:\n            return state;\n    }\n}\n\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    isLoggedIn: false,\n    userInfo: null\n}\n\nconst appReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.USER_LOGIN_SUCCESS:\n            return {\n                ...state,\n                isLoggedIn: true,\n                userInfo: action.userInfo\n            }\n        case actionTypes.USER_LOGIN_FAIL:\n            return {\n                ...state,\n                isLoggedIn: false,\n                userInfo: null\n            }\n        case actionTypes.PROCESS_LOGOUT:\n            return {\n                ...state,\n                isLoggedIn: false,\n                userInfo: null\n            }\n        default:\n            return state;\n    }\n}\n\nexport default appReducer;","import actionTypes from '../actions/actionTypes';\n\nconst initialState = {\n    isLoadingGender: false,\n    genders: [],\n    roles: [],\n    positions: [],\n    users: [],\n    topDoctors: [],\n    allDoctors: [],\n    allScheduleTime: [],\n\n    allRequiredDoctorInfor: []\n}\n\nconst adminReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case actionTypes.FETCH_GENDER_START:\n            // console.log(\"adminReducer, case FETCH_GENDER_START: \", action)\n            state.isLoadingGender = true\n            return {\n                ...state,\n            }\n\n        case actionTypes.FETCH_GENDER_SUCCESS:\n            // console.log(\"adminReducer, case FETCH_GENDER_SUCCESS: \", action)\n            state.genders = action.data\n            state.isLoadingGender = false\n            return {\n                ...state,\n            }\n\n        case actionTypes.FETCH_GENDER_FAILED:\n            // console.log(\"adminReducer, case FETCH_GENDER_FAILED: \", action)\n            state.isLoadingGender = false\n            return {\n                ...state,\n            }\n\n        case actionTypes.FETCH_POSITION_START:\n            // console.log(\"adminReducer, case FETCH_ROLE_START: \", action)\n            return {\n                ...state,\n            }\n\n        case actionTypes.FETCH_POSITION_SUCCESS:\n            // console.log(\"adminReducer, FETCH_ROLE_SUCCESS: \", action)\n            state.positions = action.data\n            return {\n                ...state,\n            }\n\n        case actionTypes.FETCH_POSITION_FAILED:\n            // console.log(\"adminReducer, case FETCH_ROLE_FAILED: \", action)\n\n            return {\n                ...state,\n            }\n\n        case actionTypes.FETCH_ROLE_START:\n            // console.log(\"adminReducer, case FETCH_ROLE_START: \", action)\n            return {\n                ...state,\n            }\n\n        case actionTypes.FETCH_ROLE_SUCCESS:\n            // console.log(\"adminReducer, FETCH_ROLE_SUCCESS: \", action)\n            state.roles = action.data\n            // console.log(\"state fetch role success\", state)\n            return {\n                ...state,\n            }\n\n        case actionTypes.FETCH_ROLE_FAILED:\n            // console.log(\"adminReducer, case FETCH_ROLE_FAILED: \", action)\n\n            return {\n                ...state,\n            }\n\n        case actionTypes.FETCH_ALL_USER_SUCCESS:\n            // console.log(\"adminReducer, case FETCH_ROLE_FAILED: \", action)\n            // console.log(\"actiontypes action: \", action)\n            state.users = action.users\n            return {\n                ...state,\n            }\n\n        case actionTypes.FETCH_ALL_USER_FAILED:\n            // console.log(\"adminReducer, case FETCH_ROLE_FAILED: \", action)\n            state.users = []\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_TOP_DOCTOR_SUCCESS:\n            // console.log(\"adminReducer, case FETCH_ROLE_FAILED: \", action)\n            // console.log(\"actiontypes action: \", action)\n            state.topDoctors = action.dataDoctors\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_TOP_DOCTOR_FAILED:\n            // console.log(\"adminReducer, case FETCH_ROLE_FAILED: \", action)\n            // console.log(\"actiontypes action: \", action)\n            state.topDoctors = []\n            return {\n                ...state,\n            }\n\n        case actionTypes.FETCH_ALL_DOCTOR_SUCCESS:\n            // console.log(\"adminReducer, case FETCH_ROLE_FAILED: \", action)\n            // console.log(\"fetch all doctor success: \", action)\n            state.allDoctors = action.dataDoctors\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_ALL_DOCTOR_FAILED:\n            console.log(\"fetch all user fail\")\n            // console.log(\"adminReducer, case FETCH_ROLE_FAILED: \", action)\n            // console.log(\"actiontypes action: \", action)\n            state.topDoctors = []\n            return {\n                ...state,\n            }\n\n\n        case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS:\n            // console.log(\"adminReducer, case FETCH_ROLE_FAILED: \", action)\n            // console.log(\"fetch all doctor success: \", action)\n            state.allScheduleTime = action.dataTime\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_ALLCODE_SCHEDULE_TIME_FAILED:\n            console.log(\"fetch all user fail\")\n            // console.log(\"adminReducer, case FETCH_ROLE_FAILED: \", action)\n            // console.log(\"actiontypes action: \", action)\n            state.topDoctors = []\n            return {\n                ...state,\n            }\n\n        case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_START:\n            // console.log(\"fetch required doctor infor start : \")\n            return {\n                ...state,\n            }\n\n        case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS:\n            // console.log(\"adminReducer, case FETCH_ROLE_FAILED: \", action)\n            // console.log(\"fetch all doctor success: \", action)\n            state.allRequiredDoctorInfor = action.allRequiredData\n            // console.log(\"fetch required doctor data action: \", action)\n            return {\n                ...state,\n            }\n        case actionTypes.FETCH_REQUIRED_DOCTOR_INFOR_FAILED:\n            // console.log(\"fetch all user fail\")\n            // console.log(\"adminReducer, case FETCH_ROLE_FAILED: \", action)\n            // console.log(\"actiontypes action: \", action)\n            state.allRequiredDoctorInfor = []\n            return {\n                ...state,\n            }\n        default:\n            return state;\n    }\n}\n\nexport default adminReducer;","import { combineReducers } from 'redux';\nimport { connectRouter } from 'connected-react-router';\n\nimport appReducer from \"./appReducer\";\nimport userReducer from \"./userReducer\";\nimport adminReducer from './adminReducer'\n\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport storage from 'redux-persist/lib/storage';\nimport { persistReducer } from 'redux-persist';\n\nconst persistCommonConfig = {\n    storage: storage,\n    stateReconciler: autoMergeLevel2,\n};\n\n// const adminPersistConfig = {\n//     ...persistCommonConfig,\n//     key: 'admin',\n//     whitelist: ['isLoggedIn', 'adminInfo']\n// };\n\nconst userPersistConfig = {\n    ...persistCommonConfig,\n    key: 'user',\n    whitelist: ['isLoggedIn', 'userInfo']\n};\n\nconst appPersistConfig = {\n    ...persistCommonConfig,\n    key: 'app',\n    whitelist: ['language']\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default (history) => combineReducers({\n    router: connectRouter(history),\n    user: persistReducer(userPersistConfig, userReducer),\n    app: persistReducer(appPersistConfig, appReducer),\n    admin: adminReducer\n})","import { logger } from \"redux-logger\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { routerMiddleware } from 'connected-react-router';\nimport { createBrowserHistory } from 'history';\n\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport { createStateSyncMiddleware } from 'redux-state-sync';\nimport { persistStore } from 'redux-persist';\n\nimport createRootReducer from './store/reducers/rootReducer';\nimport actionTypes from './store/actions/actionTypes';\n\nconst environment = process.env.NODE_ENV || \"development\";\nlet isDevelopment = environment === \"development\";\n\n//hide redux logs\nisDevelopment = false;\n\n\nexport const history = createBrowserHistory({ basename: process.env.REACT_APP_ROUTER_BASE_NAME });\n\nconst reduxStateSyncConfig = {\n    whitelist: [\n        actionTypes.APP_START_UP_COMPLETE,\n        actionTypes.CHANGELANGUAGE\n    ]\n}\n\nconst rootReducer = createRootReducer(history);\nconst middleware = [\n    routerMiddleware(history),\n    thunkMiddleware,\n    createStateSyncMiddleware(reduxStateSyncConfig),\n]\nif (isDevelopment) middleware.push(logger);\n\nconst composeEnhancers = (isDevelopment && window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ : compose;\n\nconst reduxStore = createStore(\n    rootReducer,\n    composeEnhancers(applyMiddleware(...middleware)),\n)\n\nexport const dispatch = reduxStore.dispatch;\n\nexport const persistor = persistStore(reduxStore);\n\nexport default reduxStore;","import React, { Component } from 'react';\nimport { Scrollbars } from 'react-custom-scrollbars';\n\nimport './CustomScrollbars.scss';\n\nclass CustomScrollbars extends Component {\n\n    ref = React.createRef();\n\n    getScrollLeft =()=>{\n        const scrollbars = this.ref.current;\n        return scrollbars.getScrollLeft();\n    }\n    getScrollTop =()=>{\n        const scrollbars = this.ref.current;\n        return scrollbars.getScrollTop();\n    }\n\n    scrollToBottom = () => {\n        if (!this.ref || !this.ref.current) {\n            return;\n        }\n        const scrollbars = this.ref.current;\n        const targetScrollTop = scrollbars.getScrollHeight();\n        this.scrollTo(targetScrollTop);\n    };\n\n    scrollTo = (targetTop) => {\n        const { quickScroll } = this.props;\n        if (!this.ref || !this.ref.current) {\n            return;\n        }\n        const scrollbars = this.ref.current;\n        const originalTop = scrollbars.getScrollTop();\n        let iteration = 0;\n\n        const scroll = () => {\n            iteration++;\n            if (iteration > 30) {\n                return;\n            }\n            scrollbars.scrollTop(originalTop + (targetTop - originalTop) / 30 * iteration);\n\n            if (quickScroll && quickScroll === true) {\n                scroll();\n            } else {\n                setTimeout(() => {\n                    scroll();\n                }, 20);\n            }\n        };\n\n        scroll();\n    };\n\n    renderTrackHorizontal = (props) => {\n        return (\n            <div {...props} className=\"track-horizontal\" />\n        );\n    };\n\n    renderTrackVertical = (props) => {\n        return (\n            <div {...props} className=\"track-vertical\" />\n        );\n    };\n\n    renderThumbHorizontal = (props) => {\n        return (\n            <div {...props} className=\"thumb-horizontal\" />\n        );\n    };\n\n    renderThumbVertical = (props) => {\n        return (\n            <div {...props} className=\"thumb-vertical\" />\n        );\n    };\n\n    renderNone = (props) => {\n        return (\n            <div />\n        );\n    };\n\n    render() {\n        const { className, disableVerticalScroll, disableHorizontalScroll, children,...otherProps } = this.props;\n        return (\n            <Scrollbars\n                ref={this.ref}\n                autoHide={true}\n                autoHideTimeout={200}\n                hideTracksWhenNotNeeded={true}\n                className={className ? className + ' custom-scrollbar' : 'custom-scrollbar'}\n                {...otherProps}\n                renderTrackHorizontal={disableHorizontalScroll ? this.renderNone : this.renderTrackHorizontal}\n                renderTrackVertical={disableVerticalScroll ? this.renderNone : this.renderTrackVertical}\n                renderThumbHorizontal={disableHorizontalScroll ? this.renderNone : this.renderThumbHorizontal}\n                renderThumbVertical={disableVerticalScroll ? this.renderNone : this.renderThumbVertical}\n            >\n                {children}\n            </Scrollbars>\n        );\n    }\n}\n\nexport default CustomScrollbars;","import locationHelperBuilder from \"redux-auth-wrapper/history4/locationHelper\";\nimport { connectedRouterRedirect } from \"redux-auth-wrapper/history4/redirect\";\n\nconst locationHelper = locationHelperBuilder({});\n\nexport const userIsAuthenticated = connectedRouterRedirect({\n    authenticatedSelector: state => state.user.isLoggedIn,\n    wrapperDisplayName: 'UserIsAuthenticated',\n    redirectPath: '/login'\n});\n\nexport const userIsNotAuthenticated = connectedRouterRedirect({\n    // Want to redirect the user when they are authenticated\n    authenticatedSelector: state => !state.user.isLoggedIn,\n    wrapperDisplayName: 'UserIsNotAuthenticated',\n    redirectPath: (state, ownProps) => locationHelper.getRedirectQueryParam(ownProps) || '/',\n    allowRedirectBack: false\n});","class KeyCodeUtils {\n\n    static UP = 38;\n\n    static DOWN = 40;\n\n    static TAB = 9;\n\n    static ENTER = 13;\n\n    static E = 69;\n\n    static ESCAPE = 27; \n\n    static isNavigation(e) {\n        return (e >= 33 && e <= 40) || e === 9 || e === 8 || e === 46 || e === 14 || e === 13;\n    }\n\n    static isNumeric(e) {\n        return (e >= 48 && e <= 57) || (e >= 96 && e <= 105);\n    }\n    static isAlphabetic(e) {\n        return (e >= 65 && e <= 90);\n    }\n    static isDecimal(e) {\n        return e === 190 || e === 188 || e === 108 || e === 110;\n    }\n\n    static isDash(e) {\n        return e === 109 || e === 189;\n    }\n}\n\nexport default KeyCodeUtils;","import messages_vi from '../translations/vi.json';\nimport messages_en from '../translations/en.json';\n\nconst flattenMessages = ((nestedMessages, prefix = '') => {\n    if (nestedMessages == null) {\n        return {}\n    }\n    return Object.keys(nestedMessages).reduce((messages, key) => {\n        const value = nestedMessages[key];\n        const prefixedKey = prefix ? `${prefix}.${key}` : key;\n\n        if (typeof value === 'string') {\n            Object.assign(messages, {[prefixedKey]: value})\n        } else {\n            Object.assign(messages, flattenMessages(value, prefixedKey))\n        }\n\n        return messages\n    }, {})\n});\n\nconst messages = {\n    'vi': flattenMessages(messages_vi),\n    'en': flattenMessages(messages_en),\n};\n\nexport default class LanguageUtils {\n    static getMessageByKey(key, lang) {\n        return messages[lang][key]\n    }\n\n    static getFlattenedMessages() {\n        return messages;\n    }\n}","import React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nclass Home extends Component {\n\n    render() {\n        const { isLoggedIn } = this.props;\n        let linkToRedirect = isLoggedIn ? '/system/user-manage' : '/home';\n\n        return (\n            <Redirect to={linkToRedirect} />\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn: state.user.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import React, { Component, Fragment } from 'react';\nimport { FormattedMessage, FormattedTime } from 'react-intl';\n\nimport CustomScrollBar from '../components/CustomScrollbars';\n\nimport './CustomToast.scss';\n\nclass CustomToast extends Component {\n\n    render() {\n        const { titleId, message, messageId, time } = this.props;\n        return (\n            <Fragment>\n                <div className=\"custom-toast\">\n                    <div className=\"toast-title\">\n                        {time && (\n                            <span className=\"date\">\n                                <FormattedTime hour='numeric' minute='numeric' second='numeric' hour12={true} value={time} />\n                            </span>\n                        )}\n                        <i className=\"fa fa-fw fa-exclamation-triangle\" />\n                        <FormattedMessage id={titleId} />\n                    </div>\n                    {\n                        (message && typeof message === 'object') ?\n                            <CustomScrollBar autoHeight={true} autoHeightMin={50} autoHeightMax={100}>\n                                {\n                                    message.map((msg, index) => {\n                                        return (\n                                            <Fragment key={index}>\n                                                <div className=\"toast-content\">{msg}</div>\n                                            </Fragment>\n                                        )\n                                    })\n                                }\n                            </CustomScrollBar> :\n                            <div className=\"toast-content\">\n                                {message ? message : (messageId ? (<FormattedMessage id={messageId} />) : null)}\n                            </div>\n                    }\n                </div>\n            </Fragment>\n        );\n    }\n}\n\nexport class CustomToastCloseButton extends Component {\n\n    render() {\n        return (\n            <button type=\"button\" className=\"toast-close\" onClick={this.props.closeToast}>\n                <i className=\"fa fa-fw fa-times-circle\" />\n            </button>\n        );\n    }\n}\n\nexport default CustomToast;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { push } from \"connected-react-router\";\nimport * as actions from \"../../store/actions\";\nimport './Login.scss';\n// import { FormattedMessage } from 'react-intl';\nimport { handleLoginApi } from '../../services/userService';\n// import { userLoginSuccess } from '../../store/actions/userActions'\n\n\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            username: '',\n            password: '',\n            errMessage: ''\n        }\n    }\n\n    handleOnChangeInputUserName = (event) => {\n        this.setState({\n            username: event.target.value\n        })\n        // console.log(event.target.value)\n    }\n\n    handleOnChangeInputPassWord = (event) => {\n        this.setState({\n            password: event.target.value\n        })\n        // console.log(event.target.value)\n    }\n\n    handleLogin = async () => {\n        this.setState({\n            errMessage: ''\n        })\n        try {\n            let data = await handleLoginApi(this.state.username, this.state.password)\n            if (data && data.errCode !== 0) {\n                this.setState({\n                    errMessage: data.message\n                })\n            } else {\n                this.props.userLoginSuccess(data.userData.user)\n                console.log('Login sucsseeds....')\n            }\n        } catch (error) {\n            if (error.response) {\n                if (error.response.data) {\n                    this.setState({\n                        errMessage: error.response.data.message\n                    })\n                }\n            }\n            console.log(this.state.errMessage)\n        }\n    }\n\n    handleKeyDown = (event) => {\n        // console.log(\"event: \", event)\n        if (event.keyCode === 13) {\n            this.handleLogin()\n        }\n    }\n\n    render() {\n        return (\n            <>\n                <div className='login-background'>\n                    <div className='login-container'>\n                        <div className='login-content row'>\n                            <div className='col-12 text-login'>Login</div>\n                            <div className='col-12 form-group login-input'>\n                                <label>User Name</label>\n                                <input\n                                    type='text' className='form-control' placeholder='Enter you User Name'\n                                    value={this.state.username}\n                                    onChange={(event) => this.handleOnChangeInputUserName(event)}\n                                />\n                            </div>\n                            <div className='col-12 form-group login-input'>\n                                <label>Password</label>\n                                <input type='password' className='form-control' placeholder='Enter your Password'\n                                    onChange={(event) => this.handleOnChangeInputPassWord(event)}\n                                    onKeyDown={(event) => this.handleKeyDown(event)}\n                                />\n                            </div>\n                            <div className='col-12' style={{ color: 'red' }}>\n                                {this.state.errMessage}\n                            </div>\n                            <div className='col-12' >\n                                <button className='btn-login' onClick={() => this.handleLogin()}>Login</button>\n                            </div>\n                            <div className='col-12'>\n                                <span className='forgot-password'>\n                                    <a href='http://localhost:3000/create-user'>Create New User</a>\n                                </span>\n                            </div>\n                            <div className='col-12'>\n                                <span className='forgot-password'>\n                                    <a href='http://localhost:3000/login'>Forgot your password</a>\n                                </span>\n                            </div>\n                            <div className='col-12 text-center'>\n                                <span className='text-other-login'>Or login with</span>\n                            </div>\n                            <div className='col-12 social-login'>\n                                <i className=\"fab fa-google-plus-g\"></i>\n                                <i className=\"fab fa-facebook-f\"></i>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        language: state.app.language,\n        // user: state.user.user\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        navigate: (path) => dispatch(push(path)),\n        // userLoginFail: () => dispatch(actions.adminLoginFail()),\n        userLoginSuccess: (userInfo) => dispatch(actions.userLoginSuccess(userInfo))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);\n","import exp from \"constants\";\nimport EventEmitter from \"events\";\n\nconst _emitter = new EventEmitter()\n_emitter.setMaxListeners(0)\n\nexport const emitter = _emitter","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, } from \"reactstrap\"\nimport { emitter } from '../../utils/emitter';\n\nclass ModalUser extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: '',\n            password: '',\n            firstName: '',\n            lastName: '',\n            address: '',\n        }\n\n        this.listenToEmitter()\n    }\n\n    componentDidMount() {\n\n    }\n\n    listenToEmitter() {\n        emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\n            this.setState({\n                email: '',\n                password: '',\n                firstName: '',\n                lastName: '',\n                address: '',\n            })\n        })\n    }\n\n    toggle = () => {\n        this.props.toggleUserModal()\n    }\n\n    checkValidateInput = () => {\n        let isValid = true\n        let arrInput = ['email', 'password', 'firstName', 'lastName', 'address']\n        for (let i = 0; i < arrInput.length; i++) {\n            if (!this.state[arrInput[i]]) {\n                isValid = false\n                console.log(\"Missing parameter: \" + arrInput[i])\n                break\n            }\n        }\n        return isValid\n    }\n\n    handleOnChangeInput = (event, id) => {\n        let copyState = { ...this.state }\n        copyState[id] = event.target.value\n\n        this.setState({\n            ...copyState\n        })\n    }\n\n    handleAddNewUser = () => {\n        let isValid = this.checkValidateInput()\n        if (isValid === true) {\n            this.props.createNewUser(this.state)\n        }\n    }\n\n    render() {\n        return (\n            <Modal\n                isOpen={this.props.isOpen}\n                toggle={() => { this.toggle() }}\n                className={'modal-user-container'}\n                size='lg'\n            >\n                <ModalHeader toggle={() => { this.toggle() }}>Create new user</ModalHeader>\n                <ModalBody>\n                    <div className='modal-user-body'>\n                        <div className='input-container'>\n                            <label>Email</label>\n                            <input\n                                type='input'\n                                onChange={(event, id) => { this.handleOnChangeInput(event, 'email') }}\n                                value={this.state.email}\n                            />\n                        </div>\n                        <div className='input-container'>\n                            <label>Password</label>\n                            <input\n                                type='password'\n                                onChange={(event, id) => { this.handleOnChangeInput(event, 'password') }}\n                                value={this.state.password}\n                            />\n                        </div>\n                        <div className='input-container'>\n                            <label>First Name</label>\n                            <input\n                                type='text'\n                                onChange={(event, id) => { this.handleOnChangeInput(event, 'firstName') }}\n                                value={this.state.firstName}\n                            />\n                        </div>\n                        <div className='input-container'>\n                            <label>Last Name</label>\n                            <input\n                                type='text'\n                                onChange={(event, id) => { this.handleOnChangeInput(event, 'lastName') }}\n                                value={this.state.lastName}\n                            />\n                        </div>\n                        <div className='input-container max-width-input'>\n                            <label>Address</label>\n                            <input\n                                type='text'\n                                onChange={(event, id) => { this.handleOnChangeInput(event, 'address') }}\n                                value={this.state.address}\n                            />\n                        </div>\n                    </div>\n                </ModalBody>\n                <ModalFooter>\n                    <Button\n                        color='primary'\n                        className='px-3'\n                        onClick={() => { this.handleAddNewUser() }}\n                    >\n                        Add new\n                    </Button>{''}\n                    <Button\n                        color='secondary'\n                        className='px-3'\n                        onClick={() => { this.toggle() }}\n                    >\n                        Close\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalUser);\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter, } from \"reactstrap\"\nimport { emitter } from '../../utils/emitter';\nimport lodash from 'lodash'\n\nclass ModalEditUser extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            id: '',\n            email: '',\n            password: '',\n            firstName: '',\n            lastName: '',\n            address: '',\n        }\n\n        this.listenToEmitter()\n    }\n\n    componentDidMount() {\n        let user = this.props.currentUser\n        if (user && !lodash.isEmpty(user)) {\n            this.setState({\n                id: user.id,\n                email: user.email,\n                password: 'harcode',\n                firstName: user.firstName,\n                lastName: user.lastName,\n                address: user.address,\n            })\n        }\n\n    }\n\n    listenToEmitter() {\n        emitter.on('EVENT_CLEAR_MODAL_DATA', () => {\n            this.setState({\n                email: '',\n                password: '',\n                firstName: '',\n                lastName: '',\n                address: '',\n            })\n        })\n    }\n\n    toggle = () => {\n        this.props.toggleUserEditModal()\n    }\n\n    checkValidateInput = () => {\n        let isValid = true\n        let arrInput = ['email', 'password', 'firstName', 'lastName', 'address']\n        for (let i = 0; i < arrInput.length; i++) {\n            if (!this.state[arrInput[i]]) {\n                isValid = false\n                console.log(\"Missing parameter: \" + arrInput[i])\n                break\n            }\n        }\n        return isValid\n    }\n\n    handleOnChangeInput = (event, id) => {\n        let copyState = { ...this.state }\n        copyState[id] = event.target.value\n\n        this.setState({\n            ...copyState\n        })\n    }\n\n    handleSaveUser = () => {\n        let isValid = this.checkValidateInput()\n        if (isValid === true) {\n            this.props.editUser(this.state)\n        }\n    }\n\n    render() {\n        console.log('check render func: ', this.props)\n        return (\n            <Modal\n                isOpen={this.props.isOpen}\n                toggle={() => { this.toggle() }}\n                className={'modal-user-container'}\n                size='lg'\n            >\n                <ModalHeader toggle={() => { this.toggle() }}>Edit User</ModalHeader>\n                <ModalBody>\n                    <div className='modal-user-body'>\n                        <div className='input-container'>\n                            <label>Email</label>\n                            <input\n                                type='input'\n                                onChange={(event, id) => { this.handleOnChangeInput(event, 'email') }}\n                                value={this.state.email}\n                                disabled\n                            />\n                        </div>\n                        <div className='input-container'>\n                            <label>Password</label>\n                            <input\n                                type='password'\n                                onChange={(event, id) => { this.handleOnChangeInput(event, 'password') }}\n                                value={this.state.password}\n                                disabled\n                            />\n                        </div>\n                        <div className='input-container'>\n                            <label>First Name</label>\n                            <input\n                                type='text'\n                                onChange={(event, id) => { this.handleOnChangeInput(event, 'firstName') }}\n                                value={this.state.firstName}\n                            />\n                        </div>\n                        <div className='input-container'>\n                            <label>Last Name</label>\n                            <input\n                                type='text'\n                                onChange={(event, id) => { this.handleOnChangeInput(event, 'lastName') }}\n                                value={this.state.lastName}\n                            />\n                        </div>\n                        <div className='input-container max-width-input'>\n                            <label>Address</label>\n                            <input\n                                type='text'\n                                onChange={(event, id) => { this.handleOnChangeInput(event, 'address') }}\n                                value={this.state.address}\n                            />\n                        </div>\n                    </div>\n                </ModalBody>\n                <ModalFooter>\n                    <Button\n                        color='primary'\n                        className='px-3'\n                        onClick={() => { this.handleSaveUser() }}\n                    >\n                        Save changes\n                    </Button>{''}\n                    <Button\n                        color='secondary'\n                        className='px-3'\n                        onClick={() => { this.toggle() }}\n                    >\n                        Close\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ModalEditUser);\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport './UserManage.scss'\nimport { getAllUsers, createNewUserService, deleteUserService, editUserService } from '../../services/userService'\nimport ModalUser from './ModalUser';\nimport ModalEditUser from './ModalEditUser';\nimport { emitter } from '../../utils/emitter';\n\nclass UserManage extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            arrUsers: [],\n            isOpenModalUser: false,\n            isOpenModalEditUser: false,\n            userEdit: {}\n        }\n    }\n\n    async componentDidMount() {\n        await this.getAllUsersFromReact()\n    }\n\n    getAllUsersFromReact = async () => {\n        let response = await getAllUsers('ALL')\n        if (response && response.errCode === 0) {\n            this.setState({\n                arrUsers: response.users\n            })\n        }\n    }\n\n    handleAddNewUser = () => {\n        this.setState({\n            isOpenModalUser: true\n        })\n    }\n\n    toggleUserModal = () => {\n        this.setState({\n            isOpenModalUser: !this.state.isOpenModalUser\n        })\n    }\n\n    toggleUserEditModal = () => {\n        this.setState({\n            isOpenModalEditUser: !this.state.isOpenModalEditUser\n        })\n    }\n\n    createNewUser = async (data) => {\n        try {\n            let response = await createNewUserService(data)\n            if (response && response.errCode !== 0) {\n                alert(response.errMessage)\n            } else {\n                await this.getAllUsersFromReact()\n                this.setState({\n                    isOpenModalUser: false\n                })\n                emitter.emit('EVENT_CLEAR_MODAL_DATA')\n            }\n        } catch (e) {\n            console.log(e)\n        }\n    }\n\n    handleEditUser = (user) => {\n        console.log(\"Check data edit: \", user)\n        this.setState({\n            isOpenModalEditUser: true,\n            userEdit: user\n        })\n    }\n\n    doEditUser = async (user) => {\n        try {\n            let res = await editUserService(user)\n            if (res && res.errCode === 0) {\n                this.setState({\n                    isOpenModalEditUser: false\n                })\n                this.getAllUsersFromReact()\n            } else {\n                alert(res.errMessage)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    handleDeleteUser = async (user) => {\n        try {\n            let res = await deleteUserService(user.id)\n            if (res && res.errCode === 0) {\n                console.log(\"User is deleted.\")\n                this.getAllUsersFromReact()\n            } else {\n                alert(res.errMessage)\n            }\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    render() {\n        let arrUsers = this.state.arrUsers\n        return (\n            <div className=\"users-container\">\n                <ModalUser\n                    isOpen={this.state.isOpenModalUser}\n                    toggleUserModal={this.toggleUserModal}\n                    createNewUser={this.createNewUser}\n                />\n                {\n                    this.state.isOpenModalEditUser &&\n                    <ModalEditUser\n                        isOpen={this.state.isOpenModalEditUser}\n                        toggleUserEditModal={this.toggleUserEditModal}\n                        currentUser={this.state.userEdit}\n                        editUser={this.doEditUser}\n                    />\n                }\n                <div className='title text-center'>Managa users with Eric</div>\n                <div className='px-1'>\n                    <button className='btn btn-primary px-3 mx-5'\n                        onClick={() => this.handleAddNewUser()}\n                    >\n                        <i className=\"fas fa-plus\"></i> Add new user\n                    </button>\n                </div>\n                <div className='users-table mt-3 mx-5'>\n                    <table id=\"customers\">\n                        <tbody>\n                            <tr>\n                                <th>Email</th>\n                                <th>First Name</th>\n                                <th>Last Name</th>\n                                <th>Address</th>\n                                <th>Actions</th>\n                            </tr>\n                            {\n                                arrUsers && arrUsers.map((item, index) => {\n                                    return (\n                                        <tr>\n                                            <td>{item.email}</td>\n                                            <td>{item.firstName}</td>\n                                            <td>{item.lastName}</td>\n                                            <td>{item.address}</td>\n                                            <td>\n                                                <button className='btn-edit' onClick={() => { this.handleEditUser(item) }}><i className=\"fas fa-edit\"></i></button>\n                                                <button className='btn-delete' onClick={() => { this.handleDeleteUser(item) }}><i className=\"fas fa-trash\"></i></button>\n                                            </td>\n                                        </tr>\n                                    )\n                                })\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserManage);\n","import React, { Component, Fragment } from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\n\nimport './Navigator.scss';\n\nclass MenuGroup extends Component {\n\n    render() {\n        const { name, children } = this.props;\n        return (\n            <li className=\"menu-group\">\n                <div className=\"menu-group-name\">\n                    <FormattedMessage id={name} />\n                </div>\n                <ul className=\"menu-list list-unstyled\">\n                    {children}\n                </ul>\n            </li>\n        );\n    }\n}\n\nclass Menu extends Component {\n\n    render() {\n        const { name, active, link, children, onClick, hasSubMenu, onLinkClick } = this.props;\n        return (\n            <li className={\"menu\" + (hasSubMenu ? \" has-sub-menu\" : \"\") + (\"\") + (active ? \" active\" : \"\")}>\n                {hasSubMenu ? (\n                    <Fragment>\n                        <span\n                            data-toggle=\"collapse\"\n                            className={\"menu-link collapsed\"}\n                            onClick={onClick}\n                            aria-expanded={\"false\"}\n                        >\n                            <FormattedMessage id={name} />\n                            <div className=\"icon-right\">\n                                <i className={\"far fa-angle-right\"} />\n                            </div>\n                        </span>\n                        <div>\n                            <ul className=\"sub-menu-list list-unstyled\">\n                                {children}\n                            </ul>\n                        </div>\n                    </Fragment>\n                ) : (\n                        <Link to={link} className=\"menu-link\" onClick={onLinkClick}>\n                            <FormattedMessage id={name} />\n                        </Link>\n                    )}\n            </li>\n        );\n    }\n}\n\nclass SubMenu extends Component {\n\n    getItemClass = path => {\n        return this.props.location.pathname === path ? \"active\" : \"\";\n    };\n\n    render() {\n        const { name, link, onLinkClick } = this.props;\n        return (\n            <li className={\"sub-menu \" + this.getItemClass(link)}>\n                <Link to={link} className=\"sub-menu-link\" onClick={onLinkClick}>\n                    <FormattedMessage id={name} />\n                </Link>\n            </li>\n        );\n    }\n}\n\nconst MenuGroupWithRouter = withRouter(MenuGroup);\nconst MenuWithRouter = withRouter(Menu);\nconst SubMenuWithRouter = withRouter(SubMenu);\n\nconst withRouterInnerRef = (WrappedComponent) => {\n\n    class InnerComponentWithRef extends React.Component {\n        render() {\n            const { forwardRef, ...rest } = this.props;\n            return <WrappedComponent {...rest} ref={forwardRef} />;\n        }\n    }\n\n    const ComponentWithRef = withRouter(InnerComponentWithRef, { withRef: true });\n\n    return React.forwardRef((props, ref) => {\n        return <ComponentWithRef {...props} forwardRef={ref} />;\n    });\n};\n\nclass Navigator extends Component {\n    state = {\n        expandedMenu: {}\n    };\n\n    toggle = (groupIndex, menuIndex) => {\n        const expandedMenu = {};\n        const needExpand = !(this.state.expandedMenu[groupIndex + '_' + menuIndex] === true);\n        if (needExpand) {\n            expandedMenu[groupIndex + '_' + menuIndex] = true;\n        }\n\n        this.setState({\n            expandedMenu: expandedMenu\n        });\n    };\n\n    isMenuHasSubMenuActive = (location, subMenus, link) => {\n        if (subMenus) {\n            if (subMenus.length === 0) {\n                return false;\n            }\n\n            const currentPath = location.pathname;\n            for (let i = 0; i < subMenus.length; i++) {\n                const subMenu = subMenus[i];\n                if (subMenu.link === currentPath) {\n                    return true;\n                }\n            }\n        }\n\n        if (link) {\n            return this.props.location.pathname === link;\n        }\n\n        return false;\n    };\n\n    checkActiveMenu = () => {\n        const { menus, location } = this.props;\n        outerLoop:\n        for (let i = 0; i < menus.length; i++) {\n            const group = menus[i];\n            if (group.menus && group.menus.length > 0) {\n                for (let j = 0; j < group.menus.length; j++) {\n                    const menu = group.menus[j];\n                    if (menu.subMenus && menu.subMenus.length > 0) {\n                        if (this.isMenuHasSubMenuActive(location, menu.subMenus, null)) {\n                            const key = i + '_' + j;\n                            this.setState({\n                                expandedMenu: {\n                                    [key]: true\n                                }\n                            });\n                            break outerLoop;\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.checkActiveMenu();\n    };\n\n    // componentWillReceiveProps(nextProps, prevState) {\n    //     const { location, setAccountMenuPath, setSettingMenuPath } = this.props;\n    //     const { location: nextLocation } = nextProps;\n    //     if (location !== nextLocation) {\n    //         let pathname = nextLocation && nextLocation.pathname;\n    //         if ((pathname.startsWith('/account/') || pathname.startsWith('/fds/account/'))) {\n    //             setAccountMenuPath(pathname);\n    //         }\n    //         if (pathname.startsWith('/settings/')) {\n    //             setSettingMenuPath(pathname);\n    //         };\n    //     };\n    // };\n\n    componentDidUpdate(prevProps, prevState) {\n        const { location } = this.props;\n        const { location: prevLocation } = prevProps;\n        if (location !== prevLocation) {\n            this.checkActiveMenu();\n        };\n    };\n\n    render() {\n        const { menus, location, onLinkClick } = this.props;\n        return (\n            <Fragment>\n                <ul className=\"navigator-menu list-unstyled\">\n                    {\n                        menus.map((group, groupIndex) => {\n                            return (\n                                <Fragment key={groupIndex}>\n                                    <MenuGroupWithRouter name={group.name}>\n                                        {group.menus ? (\n                                            group.menus.map((menu, menuIndex) => {\n                                                const isMenuHasSubMenuActive = this.isMenuHasSubMenuActive(location, menu.subMenus, menu.link);\n                                                const isSubMenuOpen = this.state.expandedMenu[groupIndex + '_' + menuIndex] === true;\n                                                return (\n                                                    <MenuWithRouter\n                                                        key={menuIndex}\n                                                        active={isMenuHasSubMenuActive}\n                                                        name={menu.name}\n                                                        link={menu.link}\n                                                        hasSubMenu={menu.subMenus}\n                                                        isOpen={isSubMenuOpen}\n                                                        onClick={() => this.toggle(groupIndex, menuIndex)}\n                                                        onLinkClick={onLinkClick}\n                                                    >\n                                                        {menu.subMenus && menu.subMenus.map((subMenu, subMenuIndex) => (\n                                                            <SubMenuWithRouter\n                                                                key={subMenuIndex}\n                                                                name={subMenu.name}\n                                                                link={subMenu.link}\n                                                                onClick={this.closeOtherExpand}\n                                                                onLinkClick={onLinkClick}\n                                                            />\n                                                        ))}\n                                                    </MenuWithRouter>\n                                                );\n                                            })\n                                        ) : null}\n                                    </MenuGroupWithRouter>\n                                </Fragment>\n                            );\n                        })\n                    }\n                </ul>\n            </Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    }\n}\n\nexport default withRouterInnerRef(connect(mapStateToProps, mapDispatchToProps)(Navigator));\n","export const adminMenu = [\n    { //quản lý người dùng\n        name: 'menu.admin.user',\n        menus: [\n            {\n                name: 'menu.admin.crud', link: '/system/user-manage'\n            },\n            {\n                name: 'menu.admin.crud-redux', link: '/system/user-redux'\n            },\n            {\n                name: 'menu.admin.manage-doctor', link: '/system/manage-doctor'\n                // subMenus: [\n                //     { name: 'menu.system.system-administrator.user-manage', link: '/system/user-manage' },\n                //     { name: 'menu.system.system-administrator.user-redux', link: '/system/user-redux' },\n                // ]\n            },\n            // {\n            //     name: 'menu.admin.manage-admin', link: '/system/user-admin'\n            // },\n\n            { //quản lý kế hoạch khám bệnh của bs\n                name: 'menu.doctor.manage-schedule', link: '/doctor/manage-schedule'\n            }\n            // { name: 'menu.system.system-parameter.header', link: '/system/system-parameter' },\n        ]\n    },\n    { //quản lý phòng khám\n        name: 'menu.admin.clinic',\n        menus: [\n            {\n                name: 'menu.admin.manage-clinic', link: '/system/manage-clinic'\n            }\n        ]\n    },\n    { //quản lý chuyên khoa\n        name: 'menu.admin.specialty',\n        menus: [\n            {\n                name: 'menu.admin.manage-specialty', link: '/system/manage-specialty'\n            }\n        ]\n    },\n    { //quản lý cẩm nang\n        name: 'menu.admin.handbook',\n        menus: [\n            {\n                name: 'menu.admin.manage-handbook', link: '/system/manage-handbook'\n            }\n        ]\n    },\n    \n];\n\nexport const doctorMenu = [\n    {\n        name: 'manage-schedule.options',\n        menus: [\n            { //quản lý kế hoạch khám bệnh của bs\n                name: 'menu.doctor.manage-schedule', link: '/doctor/manage-schedule'\n            }\n        ]\n    }\n];","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport _ from 'lodash'\n\nimport * as actions from \"../../store/actions\";\nimport Navigator from '../../components/Navigator';\nimport { adminMenu, doctorMenu } from './menuApp';\nimport './Header.scss';\n\nimport { FormattedMessage } from 'react-intl';\nimport { LANGUAGES, USER_ROLE } from '../../utils/constant';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            menuApp: []\n        }\n    }\n\n    handleChangeLanguage = (language) => {\n        this.props.changeLanguageAppRedux(language)\n    }\n\n    componentDidMount() {\n        // console.log(\"component mount\")\n        let { userInfo } = this.props\n        let menu = []\n        if (userInfo && !_.isEmpty(userInfo)) {\n            let role = userInfo.roleId\n            if (role === USER_ROLE.ADMIN) {\n                menu = adminMenu\n            }\n            if (role === USER_ROLE.DOCTOR) {\n                menu = doctorMenu\n            }\n        }\n\n        this.setState({\n            menuApp: menu\n        })\n        // console.log(\"this.props.userInfor: \", this.props.userInfo)\n    }\n\n    render() {\n        // console.log(\"render\")\n        const { processLogout, language, userInfo } = this.props;\n        return (\n            <div className=\"header-container\">\n                {/* thanh navigator */}\n                <div className=\"header-tabs-container\">\n                    <Navigator menus={this.state.menuApp} />\n                </div>\n\n                {/* nút logout */}\n\n                <div className='languages'>\n                    <span className='welcom'><FormattedMessage id=\"homeheader.welcome\" />\n                        , {userInfo && userInfo.firstName ? userInfo.firstName : ''}\n                    </span>\n                    <span\n                        className={language === LANGUAGES.VI ? 'language-vi active' : 'language-vi'}\n                        onClick={() => this.handleChangeLanguage(LANGUAGES.VI)}\n                    >\n                        VN\n                    </span>\n                    <span\n                        className={language === LANGUAGES.EN ? 'language-en active' : 'language-en'}\n                        onClick={() => this.handleChangeLanguage(LANGUAGES.EN)}\n                    >\n                        EN\n                    </span>\n                    <div className=\"btn btn-logout\" onClick={processLogout} title='Log out'>\n                        <i className=\"fas fa-sign-out-alt\"></i>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language,\n        userInfo: state.user.userInfo\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        processLogout: () => dispatch(actions.processLogout()),\n        changeLanguageAppRedux: (language) => dispatch(actions.changeLanguageApp(language)),\n        userLoginSuccess: (user) => dispatch(actions.userLoginSuccess(user)),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);\n","import React, { Component } from 'react';\n// import { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport './ManageDoctor.scss'\nimport * as action from '../../../store/actions'\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport 'react-markdown-editor-lite/lib/index.css';\nimport Select from 'react-select'\nimport { CRUD_ACTION, LANGUAGES } from '../../../utils/constant';\nimport { getDetailInforDoctor } from '../../../services/userService';\nimport { FormattedMessage } from 'react-intl';\n\n\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\n\n\nclass ManageDoctor extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            // save to markdown table\n            contentMarkdown: '',\n            contentHTML: '',\n            selectedDoctor: '',\n            description: '',\n            listDoctors: '',\n            hasOldData: false,\n\n            //save to doctor-infor table\n            listPrice: [],\n            listPayment: [],\n            listProvince: [],\n            selectedPrice: '',\n            selectedPayment: '',\n            selectedProvince: '',\n            nameClinic: '',\n            addressClinic: '',\n            note: ''\n        }\n    }\n\n    componentDidMount() {\n        // console.log(\"dit mount\")\n        this.props.fetchAllDoctorsRedux()\n        this.props.getRequiredDoctorInfor()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // console.log(\"did update\")\n        if (prevProps.allDoctors !== this.props.allDoctors) {\n            let dataSelect = this.buildDataInput(this.props.allDoctors, 'USERS')\n            this.setState({\n                listDoctors: dataSelect\n            })\n        }\n\n        if (prevProps.language !== this.props.language) {\n            let dataSelect = this.buildDataInput(this.props.allDoctors, 'USERS')\n            let { resPayment, resPrice, resProvince } = this.props.allRequiredDoctorInfor\n            // let dataSelectPrice = this.buildDataInput(this.props.allRequiredDoctorInfor)\n            let dataPriceSelect = this.buildDataInput(resPrice, 'PRICE')\n            let dataPaymentSelect = this.buildDataInput(resPayment, 'PAYMENT')\n            let dataProvinceSelect = this.buildDataInput(resProvince, 'PROVINCE')\n            this.setState({\n                listDoctors: dataSelect,\n                listPrice: dataPriceSelect,\n                listPayment: dataPaymentSelect,\n                listProvince: dataProvinceSelect\n            })\n        }\n\n        if (prevProps.allRequiredDoctorInfor !== this.props.allRequiredDoctorInfor) {\n            // console.log('this.props.allRequiredDoctorInfor didUpdate: ', this.props.allRequiredDoctorInfor)\n            let { resPayment, resPrice, resProvince } = this.props.allRequiredDoctorInfor\n            // let dataSelectPrice = this.buildDataInput(this.props.allRequiredDoctorInfor)\n            let dataPriceSelect = this.buildDataInput(resPrice, 'PRICE')\n            let dataPaymentSelect = this.buildDataInput(resPayment, 'PAYMENT')\n            let dataProvinceSelect = this.buildDataInput(resProvince, 'PROVINCE')\n\n            this.setState({\n                listPrice: dataPriceSelect,\n                listPayment: dataPaymentSelect,\n                listProvince: dataProvinceSelect\n            })\n            // console.log(\"hi: \", dataPaymentSelect, dataPriceSelect, dataProvinceSelect)\n        }\n    }\n\n    buildDataInput = (dataInput, type) => {\n        let result = []\n        let { language } = this.props\n        if (type === 'USERS') {\n            dataInput.map((item, index) => {\n                let object = {}\n                let labelVi = `${item.lastName} ${item.firstName}`\n                let labelEn = `${item.firstName} ${item.lastName}`\n\n                object.label = language === LANGUAGES.VI ? labelVi : labelEn\n                object.value = item.id\n                result.push(object)\n                // return 0\n            })\n        }\n        if (type === 'PRICE') {\n            dataInput.map((item, index) => {\n                // console.log(\"item: \", item)\n                let object = {}\n                let labelVi = `${item.valueVi}`\n                let labelEn = `${item.valueEn} USD`\n                object.label = language === LANGUAGES.VI ? labelVi : labelEn\n                object.value = item.keyMap\n                // console.log(\"object: \", object)\n                result.push(object)\n                // return 0\n            })\n        }\n\n        if (type === 'PAYMENT' || type === 'PROVINCE') {\n            dataInput.map((item, index) => {\n                // console.log(\"item: \", item)\n                let object = {}\n                let labelVi = `${item.valueVi}`\n                let labelEn = `${item.valueEn}`\n                object.label = language === LANGUAGES.VI ? labelVi : labelEn\n                object.value = item.keyMap\n                // console.log(\"object: \", object)\n                result.push(object)\n                // return 0\n            })\n        }\n        return result\n    }\n\n    handleEditorChange = ({ html, text }) => {\n        this.setState({\n            contentMarkdown: text,\n            contentHTML: html,\n        })\n    }\n\n    handleSaveContentMarkdown = () => {\n        // console.log('this.state: ', this.state)\n        let { hasOldData } = this.state\n        this.props.saveDetailInforDoctor({\n            contentHTML: this.state.contentHTML,\n            contentMarkdown: this.state.contentMarkdown,\n            description: this.state.description,\n            doctorId: this.state.selectedDoctor.value,\n            // specialtyId: this.state.specialtyId\n            action: hasOldData === true ? CRUD_ACTION.EDIT : CRUD_ACTION.CREATE,\n\n            selectedPrice: this.state.selectedPrice.value,\n            selectedPayment: this.state.selectedPayment.value,\n            selectedProvince: this.state.selectedProvince.value,\n            nameClinic: this.state.nameClinic,\n            addressClinic: this.state.addressClinic,\n            note: this.state.note\n        })\n\n        this.setState({\n            // contentMarkdown: '',\n            // contentHTML: '',\n            // selectedDoctor: '',\n            // description: '',\n            // listDoctors: '',\n            hasOldData: false\n        })\n    }\n\n    handleChangeSelect = async (selectedDoctor) => {\n        // console.log(\"list state: \", this.state)\n        this.setState({ selectedDoctor });\n        let { listPayment, listPrice, listProvince } = this.state\n\n        let res = await getDetailInforDoctor(selectedDoctor.value)\n        // console.log(\"test res: \", res)\n        if (res && res.errCode === 0 && res.data && res.data.Markdown &&\n            res.data.Markdown.contentHTML && res.data.Markdown.contentMarkdown &&\n            res.data.Markdown.description) {\n\n            let markdown = res.data.Markdown\n\n            let addressClinic = '', nameClinic = '', note = '',\n                paymentId = '', priceId = '', provinceId = '',\n                selectedPayment = '', selectedPrice = '', selectedProvince = ''\n            if (res.data.Doctor_Infor) {\n                addressClinic = res.data.Doctor_Infor.addressClinic\n                nameClinic = res.data.Doctor_Infor.nameClinic\n                note = res.data.Doctor_Infor.note\n\n                paymentId = res.data.Doctor_Infor.paymentId\n                selectedPayment = listPayment.find(item => {\n                    return item && item.value === paymentId\n                })\n\n                priceId = res.data.Doctor_Infor.priceId\n                selectedPrice = listPrice.find(item => {\n                    return item && item.value === priceId\n                })\n\n                provinceId = res.data.Doctor_Infor.provinceId\n                selectedProvince = listProvince.find(item => {\n                    return item && item.value === provinceId\n                })\n\n                // console.log(\"price :\", priceId, listPrice)\n                // console.log(\"payment :\", paymentId, listPayment)\n                // console.log(\"province :\", provinceId, listProvince)\n            }\n\n            // let Doctor_Infor = res.data.Doctor_Infor\n            // console.log(\"Test: \", Doctor_Infor)\n            // console.log(\"List price: \", this.state.listPrice)\n\n            this.setState({\n                contentHTML: markdown.contentHTML,\n                contentMarkdown: markdown.contentMarkdown,\n                description: markdown.description,\n                hasOldData: true,\n\n                selectedPrice: selectedPrice,\n                selectedPayment: selectedPayment,\n                selectedProvince: selectedProvince,\n                nameClinic: nameClinic,\n                addressClinic: addressClinic,\n                note: note,\n            })\n        } else {\n            this.setState({\n                contentHTML: '',\n                contentMarkdown: '',\n                description: '',\n                hasOldData: false,\n                nameClinic: '',\n                addressClinic: '',\n                note: ''\n            })\n        }\n        // console.log(`Option selected:`, selectedDoctor);\n    };\n\n    handleChangeSelectDoctorInfor = (selectOption, name) => {\n        // console.log(\"selectOption: \", selectOption)\n        // console.log(\"name: \", name)\n        let stateName = name.name\n        let stateCopy = { ...this.state }\n        stateCopy[stateName] = selectOption\n        // console.log(\"stateCopy: \", stateCopy)\n        this.setState({\n            ...stateCopy\n        })\n        // console.log(\"this.state: \", this.state)\n    }\n\n    handleOnChangeText = (event, id) => {\n        let stateCopy = { ...this.state }\n        stateCopy[id] = event.target.value\n        this.setState({\n            ...stateCopy\n        })\n    }\n\n    render() {\n        let { hasOldData } = this.state\n        // console.log(\"this.state render(): \", this.state)\n        return (\n            <React.Fragment>\n                <div className='manage-doctor-container'>\n                    <div className='manage-doctor-title'>\n                        <FormattedMessage id={'admin.manage-doctor.title'} />\n                    </div>\n                    <div className='more-infor'>\n                        <div className='content-left form-group'>\n                            <label>\n                                <FormattedMessage id={'admin.manage-doctor.select-doctor'} />\n                            </label>\n                            <Select\n                                value={this.state.selectedDoctor}\n                                onChange={this.handleChangeSelect}\n                                options={this.state.listDoctors}\n                            />\n                        </div>\n                        <div className='content-right'>\n                            <lable><FormattedMessage id={'admin.manage-doctor.intro'} /></lable>\n                            <textarea className='form-control' rows='4'\n                                onChange={(event) => this.handleOnChangeText(event, 'description')}\n                                value={this.state.description}>\n                            </textarea>\n                        </div>\n                    </div>\n                    <div className='more-infor-extra row'>\n                        <div className='col-4 form-group'>\n                            <label>\n                                <FormattedMessage id={'admin.manage-doctor.price'} />\n                            </label>\n                            <Select\n                                value={this.state.selectedPrice}\n                                onChange={this.handleChangeSelectDoctorInfor}\n                                options={this.state.listPrice}\n                                name='selectedPrice'\n                                placeholder={'Giá khám'}\n                            />\n                        </div>\n                        <div className='col-4 form-group'>\n                            <label>\n                                <FormattedMessage id={'admin.manage-doctor.payment'} />\n                            </label>\n                            <Select\n                                value={this.state.selectedPayment}\n                                onChange={this.handleChangeSelectDoctorInfor}\n                                options={this.state.listPayment}\n                                name='selectedPayment'\n                                placeholder={'Phương thức thanh toán'}\n                            />\n                        </div>\n                        <div className='col-4 form-group'>\n                            <label>\n                                <FormattedMessage id={'admin.manage-doctor.province'} />\n                            </label>\n                            <Select\n                                value={this.state.selectedProvince}\n                                onChange={this.handleChangeSelectDoctorInfor}\n                                options={this.state.listProvince}\n                                name='selectedProvince'\n                                placeholder={'Tỉnh thành'}\n                            />\n                        </div>\n                        <div className='col-4 form-group'>\n                            <label><FormattedMessage id={'admin.manage-doctor.nameClinic'} /></label>\n                            <input className='form-control'\n                                onChange={(event) => this.handleOnChangeText(event, 'nameClinic')}\n                                value={this.state.nameClinic}\n                            />\n                        </div>\n                        <div className='col-4 form-group'>\n                            <label><FormattedMessage id={'admin.manage-doctor.addressClinic'} /></label>\n                            <input className='form-control'\n                                onChange={(event) => this.handleOnChangeText(event, 'addressClinic')}\n                                value={this.state.addressClinic}\n                            />\n                        </div>\n                        <div className='col-4 form-group'>\n                            <label>\n                                <FormattedMessage id={'admin.manage-doctor.note'} />\n                            </label>\n                            <input className='form-control'\n                                onChange={(event) => this.handleOnChangeText(event, 'note')}\n                                value={this.state.note}\n                            />\n                        </div>\n                    </div>\n                    <MdEditor\n                        style={{ height: '500px' }}\n                        renderHTML={text => mdParser.render(text)}\n                        onChange={this.handleEditorChange}\n                        value={this.state.contentMarkdown}\n                    />\n\n                    <button\n                        className={hasOldData ? 'save-content-doctor' : 'create-content-doctor'}\n                        onClick={() => this.handleSaveContentMarkdown()}\n                    >\n                        {\n                            hasOldData ? <span>Lưu thông tin</span> : <span>\n                                <FormattedMessage id={'admin.manage-doctor.save'}/>\n                            </span>\n                        }\n                    </button>\n                    {/* <button className='save-content-doctor'\n                        onClick={() => this.test()}\n                    >\n                        Test\n                    </button> */}\n                </div>\n            </React.Fragment >\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        language: state.app.language,\n        allDoctors: state.admin.allDoctors,\n        allRequiredDoctorInfor: state.admin.allRequiredDoctorInfor\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchAllDoctorsRedux: () => dispatch(action.fetchAllDoctor()),\n        getRequiredDoctorInfor: () => dispatch(action.getRequiredDoctorInfor()),\n        saveDetailInforDoctor: (data) => dispatch(action.saveDetailUser(data))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageDoctor);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from 'react-intl';\nimport './ManageSpecialty.scss'\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\nimport CommonUtils from '../../../utils/CommonUtils';\n\n\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\n\n\nclass ManageSpecialty extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            nameSpecialty: '',\n            imageBase94: '',\n            descriptionHTML: '',\n            descriptionMardown: ''\n        }\n    }\n\n    async componentDidMount() {\n\n    }\n\n    async componentDidUpdate(prevProps, prevState) {\n\n    };\n\n    handleOnChangeInput = (event, id) => {\n        let copyState = { ...this.state }\n        console.log(\"copy state: \", copyState)\n        copyState[id] = event.target.value\n        this.setState({\n            ...copyState\n        })\n    }\n\n    handleOnchangeImage = async (event) => {\n        let data = event.target.files\n        // console.log(\"data: \", data)\n        let file = data[0]\n        if (file) {\n            let base64 = await CommonUtils.getBase64(file)\n            // console.log(\"test base64: \", base64)\n            // let objectUrl = URL.createObjectURL(file)\n            this.setState({\n                // previewImgULR: objectUrl,\n                imageBase94: base64\n            })\n        }\n    }\n\n    handleEditorChange = ({ html, text }) => {\n        this.setState({\n            descriptionHTML: html,\n            descriptionMardown: text\n        })\n    }\n\n\n    // handleOnchangeImage = async (event) => {\n    //     let data = event.target.files\n    //     let file = data[0]\n    //     if (file) {\n    //         let base64 = await CommonUtils.getBase64(file)\n    //         // console.log(\"test base64: \", base64)\n    //         let objectUrl = URL.createObjectURL(file)\n    //         this.setState({\n    //             previewImgULR: objectUrl,\n    //             avatar: base64\n    //         })\n    //     }\n    // }\n\n    render() {\n        console.log(\"this.state: \", this.state)\n        return (\n            <React.Fragment>\n                <div className=\"manage-specialty-container\">\n                    <div className=\"ms-title\" >Quản lý chuyên khoa</div>\n                    <div className=\"add-new-specialty row\">\n                        <div className=\"col-6 form-group\">\n                            <label>Tên chuyên khoa</label>\n                            <\n                                input className=\"form-control\" type=\"text\"\n                                value={this.state.nameSpecialty}\n                                onChange={(event) => this.handleOnChangeInput(event, 'nameSpecialty')}\n                            />\n                        </div>\n                        <div className=\"col-6 form-group\">\n                            <label>Ảnh chuyên khoa</label>\n                            <input className=\"form-control-file\" type=\"file\"\n                                onChange={(event) => this.handleOnchangeImage(event)}\n                            />\n                        </div>\n                        <div className='col-12'>\n                            <MdEditor\n                                style={{ height: '300px' }}\n                                renderHTML={text => mdParser.render(text)}\n                                onChange={this.handleEditorChange}\n                                value={this.state.descriptionMardown}\n                            />\n                        </div>\n                        <div className='btn-save-specialty col-12'>\n                            <button className='btn-save-specialty'>Save</button>\n                        </div>\n                    </div>\n                </div >\n            </React.Fragment >\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        systemMenuPath: state.app.systemMenuPath,\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSpecialty);\n\n\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport UserManage from '../containers/System/UserManage';\nimport UserRedux from '../containers/System/Admin/UserRedux';\nimport Header from '../containers/Header/Header';\nimport ManageDoctor from '../containers/System/Admin/ManageDoctor';\nimport ManagerSpecialty from '../containers/System/Specialty/ManageSpecialty'\n\nclass System extends Component {\n    render() {\n        const { systemMenuPath, isLoggedIn } = this.props\n        return (\n            <React.Fragment>\n                {this.props.isLoggedIn && <Header />}\n                <div className=\"system-container\">\n                    <div className=\"system-list\">\n                        <Switch>\n                            <Route path=\"/system/user-manage\" component={UserManage} />\n                            <Route path=\"/system/user-redux\" component={UserRedux} />\n                            <Route path=\"/system/manage-doctor\" component={ManageDoctor} />\n                            <Route path=\"/system/manage-specialty\" component={ManagerSpecialty} />\n                            <Route path=\"/doctor/manage-schedule\" component={ManageDoctor} />\n                            <Route component={() => { return (<Redirect to={systemMenuPath} />) }} />\n                        </Switch>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        systemMenuPath: state.app.systemMenuPath,\n        isLoggedIn: state.user.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(System);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './HomeHeader.scss'\n\nimport { FormattedMessage } from 'react-intl';\nimport { LANGUAGES } from '../../utils/constant'\nimport { changeLanguageApp } from '../../store/actions';\n\nclass HomeHeader extends Component {\n\n    changeLanguage = (language) => {\n        this.props.changeLanguageAppRedux(language)\n    }\n\n    render() {\n        let language = this.props.language\n        return (\n            <React.Fragment>\n                <div className='home-header-container'>\n                    <div className='home-header-content'>\n                        <div className='left-content'>\n                            <i className=\"fas fa-bars\"></i>\n                            <div className='parent-header-logo'>\n                                <div className='header-logo'></div>\n                            </div>\n                        </div>\n                        <div className='center-content'>\n                            <div className='child-content'>\n                                <div><b> <FormattedMessage id=\"homeheader.speciality\" /></b></div>\n                                <div className='subs-title'> <FormattedMessage id=\"homeheader.searchdoctor\" /> </div>\n                            </div>\n                            <div className='child-content'>\n                                <div><b> <FormattedMessage id=\"homeheader.healt-facility\" /></b></div>\n                                <div className='subs-title'> <FormattedMessage id=\"homeheader.select-room\" /></div>\n                            </div>\n                            <div className='child-content'>\n                                <div><b><FormattedMessage id=\"homeheader.doctor\" /></b></div>\n                                <div className='subs-title'><FormattedMessage id=\"homeheader.select-doctor\" /></div>\n                            </div>\n                            <div className='child-content'>\n                                <div><b><FormattedMessage id=\"homeheader.fee\" /></b></div>\n                                <div className='subs-title'><FormattedMessage id=\"homeheader.check-health\" /></div>\n                            </div>\n                        </div>\n                        <div className='right-content'>\n                            <i className=\"fas fa-question-circle\"><FormattedMessage id=\"homeheader.support\" /></i>\n                            <div className={language === LANGUAGES.VI ? 'language-vi active' : 'language-vi'}>\n                                <span onClick={() => { this.changeLanguage(LANGUAGES.VI) }}>VI\n                                </span>\n                            </div>\n                            <div className={language === LANGUAGES.EN ? 'language-en active' : 'language-en'}>\n                                <span onClick={() => { this.changeLanguage(LANGUAGES.EN) }}>EN\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                {this.props.isShowBanner === true &&\n                    <div className='home-header-banner'>\n                        <div className='content-up'>\n                            <div className='title1'><FormattedMessage id=\"banner.title1\" /></div>\n                            <div className='title2'><FormattedMessage id=\"banner.title2\" /></div>\n                            <div className='search'>\n                                <i className=\"fas fa-search\"></i>\n                                <input type='text' placeholder='Chuyên khoa khám bệnh' />\n                            </div>\n                        </div>\n                        <div className='content-down'>\n                            <div className='options'>\n                                <div className='option-child'>\n                                    <div className='icon-child'>\n                                        <i className=\"fas fa-hospital\"></i>\n                                    </div>\n                                    <div className='text-child'><FormattedMessage id=\"banner.child1\" /></div>\n                                </div>\n                                <div className='option-child'>\n                                    <div className='icon-child'>\n                                        <i className=\"fas fa-mobile-alt\"></i>\n                                    </div>\n                                    <div className='text-child'><FormattedMessage id=\"banner.child2\" /></div>\n                                </div>\n                                <div className='option-child'>\n                                    <div className='icon-child'>\n                                        <i className=\"fas fa-procedures\"></i>\n                                    </div>\n                                    <div className='text-child'><FormattedMessage id=\"banner.child3\" /></div>\n                                </div>\n                                <div className='option-child'>\n                                    <div className='icon-child'>\n                                        <i className=\"fas fa-briefcase-medical\"></i>\n                                    </div>\n                                    <div className='text-child'><FormattedMessage id=\"banner.child4\" /></div>\n                                </div>\n                                <div className='option-child'>\n                                    <div className='icon-child'>\n                                        <i className=\"fas fa-user-md\"></i>\n                                    </div>\n                                    <div className='text-child'><FormattedMessage id=\"banner.child5\" /></div>\n                                </div>\n                                <div className='option-child'>\n                                    <div className='icon-child'>\n                                        <i className=\"fas fa-smile\"></i>\n                                    </div>\n                                    <div className='text-child'><FormattedMessage id=\"banner.child6\" /></div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                }\n            </React.Fragment>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language,\n        userInfo: state.user.userInfo\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        changeLanguageAppRedux: (language) => dispatch(changeLanguageApp(language))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeHeader);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './Specialty.scss'\n\n// import { FormattedMessage } from 'react-intl';\n\nimport Slider from \"react-slick\"\n\n// import specialtyImg from '../../../assets/specialty/co-xuong-khop.jpeg'\n\nclass Specialty extends Component {\n\n    render() {\n        return (\n            <div className='section-share section-specialty'>\n                <div className='section-container'>\n                    <div className='section-header'>\n                        <span className='title-section'>Chuyên khoa phổ biến</span>\n                        <button className='button-section'>Xem thêm</button>\n                    </div>\n\n                    <div className='section-body'>\n                        <Slider {...this.props.settings}>\n                            <div className='section-customize'>\n                                <div className='bg-image section-specialty'></div>\n                                <div>Cơ xương khớp</div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='bg-image section-specialty2'></div>\n                                <div>Cơ xương thần kinh</div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='bg-image section-specialty3'></div>\n                                <div>Cơ xương tiêu hoá</div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='bg-image section-specialty4'></div>\n                                <div>Cơ xương tim mạch</div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='bg-image section-specialty2'></div>\n                                <div>Cơ xương tai mũi họng</div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='bg-image section-specialty3'></div>\n                                <div>Cơ xương khớp 1</div>\n                            </div>\n                        </Slider>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Specialty);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Slider from \"react-slick\"\n\nimport './MedicalFacility.scss'\n\nclass MedicalFacility extends Component {\n\n    render() {\n        return (\n            // <div>\n            <div className='section-share section-medical-facility'>\n                <div className='section-container'>\n                    <div className='section-header'>\n                        <span className='title-section'>Cơ sở y tế nổi bật</span>\n                        <button className='button-section'>Xem thêm</button>\n                    </div>\n\n                    <div className='section-body'>\n                        <Slider {...this.props.settings}>\n                            <div className='section-customize'>\n                                <div className='bg-image section-medical-facility'></div>\n                                <div>Hệ thống Y tế Thu Cúc </div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='bg-image section-medical-facility'></div>\n                                <div>Hệ thống Y tế Bạch Mai</div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='bg-image section-medical-facility'></div>\n                                <div>Hệ thống Y tế Nam Cường</div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='bg-image section-medical-facility'></div>\n                                <div>Hệ thống Y tế Thu Vesta</div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='bg-image section-medical-facility'></div>\n                                <div>Hệ thống Y tế Yên Nghĩa</div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='bg-image section-medical-facility'></div>\n                                <div>Hệ thống Y tế Hải Phòng</div>\n                            </div>\n                        </Slider>\n                    </div>\n                </div>\n            </div>\n            // </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn: state.user.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MedicalFacility);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// import { FormattedMessage } from 'react-intl';\n\nimport Slider from \"react-slick\"\n\n// import specialtyImg from '../../../assets/specialty/co-xuong-khop.jpeg'\n\nclass HandBook extends Component {\n\n    render() {\n        return (\n            <div className='section-share section-handbook'>\n                <div className='section-container'>\n                    <div className='section-header'>\n                        <span className='title-section'>Chuyên khoa phổ biến</span>\n                        <button className='button-section'>Xem thêm</button>\n                    </div>\n\n                    <div className='section-body'>\n                        <Slider {...this.props.settings}>\n                            <div className='section-customize'>\n                                <div className='outer-bg'>\n                                    <div className='bg-image section-handbook'></div>\n                                </div>\n                                <div className='position text-center'>\n                                    <div>Nguyễn Văn Tuấn</div>\n                                    <div>Cơ xương khớp 1</div>\n                                </div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='outer-bg'>\n                                    <div className='bg-image section-handbook'></div>\n                                </div>\n                                <div className='position text-center'>\n                                    <div>Nguyễn Văn Tuấn</div>\n                                    <div>Cơ xương khớp 1</div>\n                                </div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='outer-bg'>\n                                    <div className='bg-image section-handbook'></div>\n                                </div>\n                                <div className='position text-center'>\n                                    <div>Nguyễn Văn Tuấn</div>\n                                    <div>Cơ xương khớp 1</div>\n                                </div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='outer-bg'>\n                                    <div className='bg-image section-handbook'></div>\n                                </div>\n                                <div className='position text-center'>\n                                    <div>Nguyễn Văn Tuấn</div>\n                                    <div>Cơ xương khớp 1</div>\n                                </div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='outer-bg'>\n                                    <div className='bg-image section-handbook'></div>\n                                </div>\n                                <div className='position text-center'>\n                                    <div>Nguyễn Văn Tuấn</div>\n                                    <div>Cơ xương khớp 1</div>\n                                </div>\n                            </div>\n                            <div className='section-customize'>\n                                <div className='outer-bg'>\n                                    <div className='bg-image section-handbook'></div>\n                                </div>\n                                <div className='position text-center'>\n                                    <div>Nguyễn Văn Tuấn</div>\n                                    <div>Cơ xương khớp 1</div>\n                                </div>\n                            </div>\n                        </Slider>\n                    </div>\n\n                </div>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HandBook);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// import { FormattedMessage } from 'react-intl';\n\n// import specialtyImg from '../../../assets/specialty/co-xuong-khop.jpeg'\nclass About extends Component {\n\n    render() {\n        return (\n            <div className='section-share section-about'>\n                <div className='section-about-header'>\n                    Booking Care\n                </div>\n                <div className='section-about-content'>\n                    <div className='content-left'>\n                        <iframe\n                            width=\"100%\" height=\"400px\" src=\"https://www.youtube.com/embed/DFVuYoDVS_g\"\n                            title=\"Dreaming\" frameBorder=\"0\"\n                            allow=\"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share\"\n                            allowFullScreen>\n                        </iframe>\n                    </div>\n                    <div className='content-right'>\n                        <p>\n                            Khi có sức khỏe bạn có cả ngàn giấc mơ, nhưng khi không có sức khỏe thì bạn chỉ dám mơ ước duy nhất một điều, đó là sức khỏe. Chính vì thế, những câu slogan về sức khỏe ra đời nhằm thôi thúc ý thức của con người về việc chăm sóc sức khỏe.\n                        </p>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(About);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n// import { FormattedMessage } from 'react-intl';\n\n// import specialtyImg from '../../../assets/specialty/co-xuong-khop.jpeg'\nclass HomeFooter extends Component {\n\n    render() {\n        return (\n            <div className='home-footer'>\n                <p>&copy; Booking Care.<a target='_blank' href='https://www.facebook.com/vinctuan2002/'> &#8594; Click here &#8592;</a></p>\n            </div>\n        )\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomeFooter);\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\n\nimport HomeHeader from './HomeHeader';\nimport Specialty from './Section/Specialty';\nimport MedicalFacility from './Section/MedicalFacility';\nimport OutStandingDoctor from './Section/OutStandingDoctor';\nimport HandBook from './Section/HandBook';\nimport About from './Section/About';\n\nimport './HomePage.scss'\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\"\nimport HomeFooter from './HomeFooter';\n\nclass HomePage extends Component {\n\n    render() {\n        let settings = {\n            dots: false,\n            ifninite: false,\n            speed: 500,\n            slidesToShow: 4,\n            slidesToScroll: 2\n        }\n\n        return (\n            <div>\n                <HomeHeader isShowBanner={true} />\n                <Specialty settings={settings} />\n                {/* <MedicalFacility settings={settings} /> */}\n                <OutStandingDoctor settings={settings} />\n                {/* <HandBook settings={settings} /> */}\n                <About />\n                <HomeFooter />\n            </div>\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        isLoggedIn: state.user.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(HomePage);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from 'react-intl';\nimport { LANGUAGES } from '../../../utils/constant';\nimport './ProfileDoctor.scss'\nimport { getProfileDoctorById } from '../../../services/userService'\nimport NumberFormat from 'react-number-format';\nimport moment from 'moment'\nimport _ from 'lodash';\n\nclass DefaultClass extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            dataProfile: {}\n        }\n    }\n\n    async componentDidMount() {\n        let data = await this.getInforDoctor(this.props.doctorId)\n        this.setState({\n            dataProfile: data\n        })\n    }\n\n    async componentDidUpdate(prevProps, prevState) {\n        if (this.props.language !== prevProps.language) {\n\n        }\n\n        if (this.props.doctorId !== prevProps.doctorId) {\n            // this.getInforDoctor(this.props.doctorId)\n        }\n    };\n\n    getInforDoctor = async (id) => {\n        let result = {}\n        if (id) {\n            let res = await getProfileDoctorById(id)\n            if (res && res.errCode === 0) {\n                result = res.data\n            }\n        }\n        return result\n    }\n\n    renderTimeBooking = (dataTime, language) => {\n        if (dataTime && !_.isEmpty(dataTime)) {\n            let date = language === LANGUAGES.VI ?\n                moment.unix(+dataTime.date / 1000).format('dddd - DD/MM/YYYY')\n                :\n                moment.unix(+dataTime.date / 1000).locale('en').format('ddd - MM/DD/YYYY')\n            let time = language === LANGUAGES.VI ? dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn\n            return (\n                <>\n                    <div>{time} / {date}</div>\n                </>\n            )\n        }\n    }\n\n    render() {\n        // console.log(\"this.state: \", this.state)\n        // console.log(\"this.props: \", this.props)\n\n        let { dataProfile } = this.state\n        // if (dataProfile.Doctor_Infor && dataProfile.Doctor_Infor.priceData) {\n        //     console.log(\"dataProfile.Doctor_Infor.priceData: \", dataProfile.Doctor_Infor.priceData)\n        // }\n\n        // console.log(\"dataProfile.Doctor_Infor.priceData: \", dataProfile.Doctor_Infor.priceData.valueVi)\n        // console.log(\"dataProfile.Doctor_Infor.priceData: \", dataProfile.Doctor_Infor.priceData.valueEn)\n\n        let { language, isShowDescriptionDoctor, dataTimeSchedule } = this.props\n        // console.log(\"language: \", language)\n\n        let nameVi = '', nameEn = ''\n\n        if (dataProfile && dataProfile.positionData) {\n            nameVi = `${dataProfile.positionData.valueVi}, ${dataProfile.lastName} ${dataProfile.firstName}`\n            nameEn = `${dataProfile.positionData.valueEn}, ${dataProfile.firstName} ${dataProfile.lastName}`\n        }\n\n        return (\n            <React.Fragment>\n                <div className='profile-doctor-container'>\n                    <div className='intro-doctor'>\n                        <div className='content-left'>\n                            <div className='image-doctor'\n                                style={{ backgroundImage: `url(${dataProfile && dataProfile.image ? dataProfile.image : ''})` }}>\n                            </div>\n                        </div>\n                        <div className='content-right'>\n                            <div className='up'>\n                                {\n                                    language === LANGUAGES.VI ? nameVi : nameEn\n                                }\n                            </div>\n                            <div className='down'>\n                                {isShowDescriptionDoctor &&\n                                    <>\n                                        {dataProfile && dataProfile.Markdown &&\n                                            dataProfile.Markdown.description &&\n                                            <span>\n                                                {dataProfile.Markdown.description}\n                                            </span>\n                                        }\n                                    </>\n                                }\n\n                                {this.renderTimeBooking(dataTimeSchedule, language)}\n\n                                <div className='price'>\n                                    Giá khám:\n                                    {dataProfile && dataProfile.Doctor_Infor && dataProfile.Doctor_Infor.priceData &&\n                                        <span>\n                                            {language === LANGUAGES.VI ?\n                                                <NumberFormat\n                                                    value={dataProfile.Doctor_Infor.priceData.valueVi}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    suffix={'VNĐ'}\n                                                    className='currency'\n                                                />\n                                                :\n                                                <NumberFormat\n                                                    value={dataProfile.Doctor_Infor.priceData.valueEn}\n                                                    displayType={'text'}\n                                                    thousandSeparator={true}\n                                                    suffix={'USD'}\n                                                    className='currency'\n                                                />\n                                            }\n                                        </span>\n                                    }\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n            </React.Fragment >\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        systemMenuPath: state.app.systemMenuPath,\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DefaultClass);\n","import React, { Component } from 'react';\nimport Flatpickr from 'react-flatpickr';\nimport moment from 'moment';\n\nimport { KeyCodeUtils } from \"../../utils\";\nimport './DatePicker.scss';\n\n// const CustomInput = ({ value, defaultValue, inputRef, onInputChange, onInputBlur, ...props }) => {\n//     return <input {...props} className='custom-form-control custom-date-input' defaultValue={defaultValue} ref={inputRef}\n//         onChange={onInputChange}\n//         onBlur={onInputBlur}\n//     />;\n// };\n\nclass DatePicker extends Component {\n\n    flatpickrNode = null;\n\n    nodeRef = element => {\n        this.flatpickr = element && element.flatpickr;\n        this.flatpickrNode = element && element.node;\n        if (this.flatpickrNode) {\n            this.flatpickrNode.addEventListener('blur', this.handleBlur);\n            this.flatpickrNode.addEventListener('keydown', this.handlerKeyDown);\n        }\n    };\n\n    handlerKeyDown = (event) => {\n        const keyCode = event.which || event.keyCode;\n        if (keyCode === KeyCodeUtils.ENTER) {\n            event.preventDefault();\n            const { onChange } = this.props;\n            const value = event.target.value;\n\n            // Take the blur event and process the string value\n            const valueMoment = moment(value, 'DD/MM/YYYY');\n            onChange([valueMoment.toDate(), valueMoment.toDate()]);\n        }\n    }\n\n    componentWillUnmount() {\n        if (this.flatpickrNode) {\n            this.flatpickrNode.removeEventListener('blur', this.handleBlur);\n            this.flatpickrNode.removeEventListener('keydown', this.handlerKeyDown);\n        }\n    }\n\n    handleBlur = (event) => {\n        const { onChange } = this.props;\n        const value = event.target.value;\n\n        // Take the blur event and process the string value\n        event.preventDefault();\n        const valueMoment = moment(value, 'DD/MM/YYYY');\n        onChange([valueMoment.toDate(), valueMoment.toDate()]);\n    };\n\n    onOpen = () => {\n        if (this.flatpickrNode) {\n            this.flatpickrNode.blur();\n        }\n    }\n\n    close() {\n        this.flatpickr.close();\n    }\n\n    checkDateValue = (str, max) => {\n        if (str.charAt(0) !== '0' || str === '00') {\n            var num = parseInt(str);\n            if (isNaN(num) || num <= 0 || num > max) num = 1;\n            str = num > parseInt(max.toString().charAt(0)) && num.toString().length === 1 ? '0' + num : num.toString();\n        };\n        return str;\n    }\n\n    // autoFormatonBlur = (value) => {\n    //     var input = value;\n    //     var values = input.split('/').map(function (v, i) {\n    //         return v.replace(/\\D/g, '')\n    //     });\n    //     var output = '';\n\n    //     if (values.length == 3) {\n    //         var year = values[2].length !== 4 ? parseInt(values[2]) + 2000 : parseInt(values[2]);\n    //         var month = parseInt(values[0]) - 1;\n    //         var day = parseInt(values[1]);\n    //         var d = new Date(year, month, day);\n    //         if (!isNaN(d)) {\n    //             //document.getElementById('result').innerText = d.toString();\n    //             var dates = [d.getMonth() + 1, d.getDate(), d.getFullYear()];\n    //             output = dates.map(function (v) {\n    //                 v = v.toString();\n    //                 return v.length == 1 ? '0' + v : v;\n    //             }).join(' / ');\n    //         };\n    //     };\n    //     // this.value = output;\n    //     return output;\n    // }\n\n    autoFormatOnChange = (value, seperator) => {\n        var input = value;\n\n        let regexForDeleting = new RegExp(`\\\\D\\\\${seperator}$`);\n\n        //if (/\\D\\/$/.test(input)) input = input.substr(0, input.length - 3); // dat.nt: Xóa thêm 1 ký tự nếu xóa dấu cách sau / (VD: 12 / 12 /=> 12 / 1)\n\n        if (regexForDeleting.test(input)) input = input.substr(0, input.length - 3);\n\n        var values = input.split(seperator).map(function (v) {\n            return v.replace(/\\D/g, '')\n        });\n\n        if (values[0]) values[0] = this.checkDateValue(values[0], 31);\n        if (values[1]) values[1] = this.checkDateValue(values[1], 12);\n        var output = values.map(function (v, i) {\n            return v.length === 2 && i < 2 ? v + ' ' + seperator + ' ' : v;\n        });\n        return output.join('').substr(0, 14);\n    }\n\n    onInputChange = (e) => {\n        if (this.DISPLAY_FORMAT === this.DATE_FORMAT_AUTO_FILL) {\n            let converted = this.autoFormatOnChange(e.target.value, this.SEPERATOR);\n            e.target.value = converted;\n        }\n    }\n\n    onInputBlur = (e) => {\n    }\n\n    //dat.nt : Auto Fill cho dạng ngăn cách và format cụ thể (seperator có thể dc thay thế)\n    SEPERATOR = \"/\";\n    DATE_FORMAT_AUTO_FILL = \"d/m/Y\"; // Format không thay đổi\n\n    // dat.nt : Format ngày hiển thị\n    DISPLAY_FORMAT = \"d/m/Y\";\n\n    render() {\n        const { value, onChange, minDate, onClose, ...otherProps } = this.props;\n        const options = {\n            dateFormat: this.DISPLAY_FORMAT,\n            allowInput: true,\n            disableMobile: true,\n            onClose: onClose,\n            onOpen: this.onOpen\n        };\n        if (minDate) {\n            options.minDate = new Date().setHours(0, 0, 0, 0);\n        }\n        return (\n            <Flatpickr\n                ref={this.nodeRef}\n                value={value}\n                onChange={onChange}\n                options={options}\n                // render={\n                //     ({ defaultValue, value, ...props }, ref) => {\n                //         return <CustomInput defaultValue={defaultValue} inputRef={ref} onInputChange={this.onInputChange} onInputBlur={this.onInputBlur} />\n                //     }\n                // }\n                {...otherProps}\n            />\n        );\n    }\n}\n\nexport default DatePicker;\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from 'react-intl';\nimport { Modal } from 'reactstrap'\nimport './BookingModal.scss'\nimport ProfileDoctor from '../ProfileDoctor';\nimport _ from 'lodash';\nimport DatePicker from '../../../../components/Input/DatePicker';\nimport * as action from '../../../../store/actions'\nimport { LANGUAGES } from '../../../../utils';\nimport Select from 'react-select'\nimport { postBookAppointment } from '../../../../services/userService';\nimport { toast } from 'react-toastify';\nimport moment from 'moment'\n\n\n\nclass BookingModal extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            fullName: '',\n            phoneNumber: '',\n            email: '',\n            address: '',\n            reason: '',\n            birthday: '',\n            selectedGender: '',\n            doctorId: '',\n            timeType: '',\n            genders: '',\n        }\n    }\n\n    async componentDidMount() {\n        this.props.fetchGenderStart()\n    }\n\n    async componentDidUpdate(prevProps, prevState) {\n        if (this.props.language !== prevProps.language) {\n            this.setState({\n                genders: this.buildGenders(this.props.gendersProps)\n            })\n        }\n        if (this.props.gendersProps !== prevProps.gendersProps) {\n            this.setState({\n                genders: this.buildGenders(this.props.gendersProps)\n            })\n        }\n        if (this.props.dataTimeSchedule !== prevProps.dataTimeSchedule) {\n            if (this.props.dataTimeSchedule && !_.isEmpty(this.props.dataTimeSchedule)) {\n                let doctorId = this.props.dataTimeSchedule.doctorId\n                let timeType = this.props.dataTimeSchedule.timeType\n                this.setState({\n                    doctorId: doctorId,\n                    timeType: timeType\n                })\n            }\n        }\n    };\n\n    buildGenders = (data) => {\n        let result = []\n        let language = this.props.language\n        data.map(item => {\n            let object = {}\n            object.label = language === LANGUAGES.VI ? item.valueVi : item.valueEn\n            object.value = item.keyMap\n            result.push(object)\n        })\n        return result\n    }\n\n    handleOnChangeInput = (event, id) => {\n        // console.log(\"event: \", event.target.value)\n        let stateCopy = { ...this.state }\n        stateCopy[id] = event.target.value\n        this.setState({\n            ...stateCopy\n        })\n    }\n\n    // handleChangeDatePicker = (date) => {\n    //     this.setState({\n    //         birthday: date[0]\n    //     })\n    // }\n\n    handleDateSelect = (date) => {\n        console.log(\"date select\")\n    }\n\n    handleDateChange = (date) => {\n        // console.log(\"handle date change\", date[0])\n        if (date[0]) {\n            this.setState({\n                birthday: date[0]\n            })\n        }\n    }\n\n    handleChangeSelectGender = (selected) => {\n        this.setState({ selectedGender: selected })\n    }\n\n    handleConfirmBooking = async () => {\n        // console.log(\"this.state: \", this.state)\n        let date = new Date(this.state.birthday).getTime()\n        let timeString = this.buildTimeBooking(this.props.dataTimeSchedule)\n        \n        let res = await postBookAppointment({\n            fullName: this.state.fullName,\n            phoneNumber: this.state.phoneNumber,\n            email: this.state.email,\n            address: this.state.address,\n            reason: this.state.reason,\n            date: date,\n            selectedGender: this.state.selectedGender.value,\n            doctorId: this.state.doctorId,\n            timeType: this.state.timeType,\n            language: this.props.language,\n            timeString: timeString\n        })\n\n        if (res && res.errCode === 0) {\n            toast.success(\"Booking a new appointment succed!\")\n            this.props.closeModalBooking()\n        } else {\n            toast.error(\"Error!\")\n        }\n    }\n\n\n    buildTimeBooking = (dataTime) => {\n        let { language } = this.props\n        if (dataTime && !_.isEmpty(dataTime)) {\n            let date = language === LANGUAGES.VI ?\n                moment.unix(+dataTime.date / 1000).format('dddd - DD/MM/YYYY')\n                :\n                moment.unix(+dataTime.date / 1000).locale('en').format('ddd - MM/DD/YYYY')\n            let time = language === LANGUAGES.VI ? dataTime.timeTypeData.valueVi : dataTime.timeTypeData.valueEn\n            return `${time} - ${date}`\n        }\n        return ''\n    }\n\n    render() {\n\n        // console.log(\"this.props.dataTimeSchedule: \", this.props.dataTimeSchedule)\n        let { isOpenModal, closeModalBooking, dataTimeSchedule } = this.props\n        // let timeBooking = this.buildTimeBooking(dataTimeSchedule)\n        // console.log(\"this.props bookingmodal: \", this.props)\n        // console.log(\"this.state bookingmodal: \", this.state)\n        let doctorId = dataTimeSchedule && !_.isEmpty(dataTimeSchedule) ? dataTimeSchedule.doctorId : ''\n        // console.log(\"doctorId: \", doctorId)\n\n        // console.log(\"this.props: \", this.props)\n        // console.log(\"this.state: \", this.state)\n        // console.log(\"timeBookingx: \", timeBooking)\n        return (\n            <React.Fragment>\n                <div>\n                    <Modal\n                        className={'booking-modal-contrainer'}\n                        isOpen={isOpenModal}\n                        size='lg'\n                        centered\n                        backdrop={true}\n                    >\n                        <div className='booking-modal-content'>\n                            <div className='booking-modal-header'>\n                                <span className='left'>\n                                    <FormattedMessage id=\"patient.booking-modal.title\" />\n                                </span>\n                                <span\n                                    className='right'\n                                    onClick={closeModalBooking}\n                                >\n                                    <i className='fas fa-times'></i>\n                                </span>\n                            </div>\n                            <div className='booking-modal-body'>\n                                <div className='doctor-infor'>\n                                    <ProfileDoctor\n                                        doctorId={doctorId}\n                                        isShowDescriptionDoctor={false}\n                                        dataTimeSchedule={dataTimeSchedule}\n                                    />\n                                </div>\n                                <div className='row'>\n                                    <div className='col-6 form-group'>\n                                        <label>\n                                            <FormattedMessage id=\"patient.booking-modal.full-name\" />\n                                        </label>\n                                        <input className='form-control'\n                                            onChange={(event) => this.handleOnChangeInput(event, 'fullName')}\n                                            value={this.state.fullName}\n                                        ></input>\n                                    </div>\n                                    <div className='col-6 form-group'>\n                                        <label><FormattedMessage id=\"patient.booking-modal.phone-number\" /></label>\n                                        <input className='form-control'\n                                            onChange={(event) => this.handleOnChangeInput(event, 'phoneNumber')}\n                                            value={this.state.phoneNumber}\n                                        ></input>\n                                    </div>\n                                    <div className='col-6 form-group'>\n                                        <label><FormattedMessage id=\"patient.booking-modal.email\" /></label>\n                                        <input className='form-control'\n                                            onChange={(event) => this.handleOnChangeInput(event, 'email')}\n                                            value={this.state.email}\n                                        ></input>\n                                    </div>\n                                    <div className='col-6 form-group'>\n                                        <label><FormattedMessage id=\"patient.booking-modal.address\" /></label>\n                                        <input className='form-control'\n                                            onChange={(event) => this.handleOnChangeInput(event, 'address')}\n                                            value={this.state.address}\n                                        ></input>\n                                    </div>\n                                    <div className='col-12 form-group'>\n                                        <label><FormattedMessage id=\"patient.booking-modal.reason\" /></label>\n                                        <input className='form-control'\n                                            onChange={(event) => this.handleOnChangeInput(event, 'reason')}\n                                            value={this.state.reason}\n                                        ></input>\n                                    </div>\n                                    <div className='col-6 form-group'>\n                                        <label><FormattedMessage id=\"patient.booking-modal.birthday\" /></label>\n                                        {/* <DatePicker\n                                            className='form-control'\n                                            onChange={this.handleChangeDatePicker}\n                                            value={this.state.birthday}\n                                            minDate={new Date()}\n                                        /> */}\n                                        <DatePicker\n                                            className='form-control'\n                                            selected={new Date()}\n                                            // onSelect={this.handleDateSelect} //when day is clicked\n                                            onChange={this.handleDateChange} //only when value has changed\n                                        />\n                                    </div>\n                                    <div className='col-6 form-group'>\n                                        <label><FormattedMessage id=\"patient.booking-modal.gender\" /></label>\n                                        <Select\n                                            value={this.state.selectedGender}\n                                            onChange={this.handleChangeSelectGender}\n                                            options={this.state.genders}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                            <div className='booking-modal-footer'>\n                                <button\n                                    className='btn-booking-confirm'\n                                    onClick={() => this.handleConfirmBooking()}\n                                >\n                                    <FormattedMessage id=\"patient.booking-modal.btnConfirm\" />\n                                </button>\n                                <button className='btn-booking-cancel'\n                                    onClick={closeModalBooking}\n                                >\n                                    <FormattedMessage id=\"patient.booking-modal.cancel\" />\n                                </button>\n                            </div>\n                        </div>\n                    </Modal>\n                </div>\n            </React.Fragment >\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        systemMenuPath: state.app.systemMenuPath,\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language,\n        gendersProps: state.admin.genders,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchGenderStart: () => dispatch(action.fetchGenderStart()),\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(BookingModal);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport './DoctorSchedule.scss'\nimport moment from 'moment'\nimport localization from 'moment/locale/vi'\nimport { LANGUAGES } from '../../../utils/constant';\nimport { getScheduleDoctorByDate } from '../../../services/userService';\nimport BookingModal from './Modal/BookingModal';\n\nclass DoctorSchedule extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            allDays: [],\n            allAvailableTime: [],\n            isOpenModal: false,\n            dataTimeSchedule: {}\n        }\n    }\n\n    async componentDidMount() {\n        let { language } = this.props\n        let allDays = this.getArrDays(language)\n        // console.log(\"this.props: \", this.props)\n        // console.log('this.props.doctorid: ', this.props.doctorId)\n        if (allDays && allDays.length > 0) {\n            let res = await getScheduleDoctorByDate(this.props.doctorId, allDays[0].value)\n            this.setState({\n                allDays: allDays,\n                allAvailableTime: res.data ? res.data : []\n            })\n        }\n    }\n\n    async componentDidUpdate(prevProps, prevState) {\n        if (this.props.language !== prevProps.language) {\n            let allDays = this.getArrDays(this.props.language)\n            this.setState({\n                allDays: allDays\n            })\n        }\n\n        let { language } = this.props\n        let allDays = this.getArrDays(language)\n        if (this.props.doctorId !== prevProps.doctorId) {\n            if (allDays && allDays.length > 0) {\n                let res = await getScheduleDoctorByDate(this.props.doctorId, allDays[0].value)\n                this.setState({\n                    allDays: allDays,\n                    allAvailableTime: res.data ? res.data : []\n                })\n            }\n        }\n    };\n\n    getArrDays = (language) => {\n        let allDays = []\n        for (let i = 0; i < 7; i++) {\n            let object = {}\n            if (language === LANGUAGES.VI) {\n                object.label = moment(new Date()).add(i, 'days').format('dddd - DD/MM')\n            } else {\n                object.label = moment(new Date()).add(i, 'days').locale('en').format('ddd - DD/MM')\n            }\n            object.value = moment(new Date()).add(i, 'days').startOf('day').valueOf()\n            allDays.push(object)\n        }\n        return allDays\n        // console.log(\"Arr date: \", arrDate)\n    }\n\n    handleOnChangeSelect = async (event) => {\n        // console.log(\"event.target: \", event.target.value)\n        if (this.props.doctorId && this.props.doctorId !== -1) {\n            let doctorId = this.props.doctorId\n            let date = event.target.value\n            let res = await getScheduleDoctorByDate(doctorId, date)\n            console.log(\"check res get schedule: \", res)\n            if (res && res.errCode === 0) {\n                this.setState({\n                    allAvailableTime: res.data ? res.data : []\n                })\n            }\n        }\n\n    }\n\n    handleClickScheduleTime = (time) => {\n        // console.log(\"time: \", time)\n        this.setState({\n            isOpenModal: true,\n            dataTimeSchedule: time\n        })\n    }\n\n    closeModalBooking = () => {\n        this.setState({\n            isOpenModal: false\n        })\n    }\n\n    render() {\n        let { allDays, allAvailableTime, isOpenModal, dataTimeSchedule } = this.state\n        let { language } = this.props\n        // console.log(\"dataTimeSchedule: \", dataTimeSchedule)\n        // console.log(\"this.props doctorshedule: \", this.props)\n        // console.log(\"allAvailableTime: \", allAvailableTime)\n        // console.log(\"this.state: doctorschedule: \", do)\n        return (\n            <React.Fragment>\n                <div className='doctor-schedule-container'>\n                    <div className='all-schedule'>\n                        <select onChange={(event) => this.handleOnChangeSelect(event)}>\n                            {allDays && allDays.length > 0 &&\n                                allDays.map((item, index) => {\n                                    return (\n                                        <option value={item.value} key={index}>\n                                            {item.label}\n                                        </option>\n                                    )\n                                })\n\n                            }\n                        </select>\n                    </div>\n                    <div className='all-available-time'>\n                        <div className='text-calendar'>\n                            <i className='fas fa-calendar-alt'><span>Lịch khám</span></i>\n                        </div>\n                        <div className='time-content'>\n                            {\n                                allAvailableTime && allAvailableTime.length > 0 ?\n                                    allAvailableTime.map((item, index) => {\n                                        let timeDisplay =\n                                            language === LANGUAGES.VI ? item.timeTypeData.valueVi : item.timeTypeData.valueEn\n                                        return (\n                                            <button\n                                                className={language === LANGUAGES.VI ? 'btn-vi' : 'btn-en'} key={index}\n                                                onClick={() => this.handleClickScheduleTime(item)}\n                                            >\n                                                {timeDisplay}\n                                            </button>\n                                        )\n                                    })\n                                    :\n                                    <div className='no-schedule'>\n                                        Không có lịch hẹn trong khoảng thời gian này, vui lòng chọn thời gian khác!\n                                    </div>\n                            }\n                        </div>\n                    </div>\n                </div>\n                <BookingModal\n                    isOpenModal={isOpenModal}\n                    closeModalBooking={this.closeModalBooking}\n                    dataTimeSchedule={dataTimeSchedule}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        systemMenuPath: state.app.systemMenuPath,\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorSchedule);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport './DoctorExtraInfor.scss'\nimport { getExtraInforDoctorById } from '../../../services/userService';\nimport NumberFormat from 'react-number-format';\nimport { FormattedMessage } from 'react-intl';\n\nimport { LANGUAGES } from '../../../utils/constant';\n\nclass DoctorExtraInfor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            isShowDetailInfor: true,\n            extraInfor: {}\n        }\n    }\n\n    async componentDidMount() {\n        // console.log(\"did mount\")\n        // let data = await getExtraInforDoctorById(this.props.doctorId)\n        // console.log('data by id: ', data)\n        let res = await getExtraInforDoctorById(this.props.doctorId)\n        // console.log('res didupdate: ', res)\n        if (res && res.errCode === 0) {\n            this.setState({\n                extraInfor: res.data\n            })\n        }\n    }\n\n    async componentDidUpdate(prevProps, prevState) {\n        // console.log(\"did update\")\n        if (this.props.language !== prevProps.language) {\n\n        }\n\n        if (this.props.doctorIdFromParent !== prevProps.doctorIdFromParent) {\n\n        }\n    };\n\n    showHideDetailInfor = (status) => {\n        this.setState({\n            isShowDetailInfor: status\n        })\n    }\n\n    render() {\n        let { isShowDetailInfor, extraInfor } = this.state;\n        let { language } = this.props\n        // // console.log(this.props)\n        // console.log(\"extraInfor: \", extraInfor)\n        // console.log(\"this.prevProps: \", this.props)\n\n        return (\n            <React.Fragment>\n                <div className='doctor-extra-infor-container'>\n                    <div className='content-up'>\n                        <div className='text-address'>\n                            <FormattedMessage id={'patient.extra-infor-doctor.text-address'} />\n                            {/* {extraInfor.addressClinic ? extraInfor.addressClinic : ''} */}\n                        </div>\n                        <div>\n                            <div className='name-clinic'>\n                                {extraInfor.nameClinic ? extraInfor.nameClinic : ''}\n                            </div>\n                            <div className='detail-address'>\n                                {extraInfor.addressClinic ? extraInfor.addressClinic : ''}\n                            </div>\n                        </div>\n                    </div>\n                    <div className='content-down'>\n                        <div>\n                            {isShowDetailInfor === false &&\n                                <div className='short-infor'>\n                                    <FormattedMessage id={'patient.extra-infor-doctor.price'} />\n                                    :\n                                    {\n                                        extraInfor && extraInfor.priceData && language === LANGUAGES.VI &&\n                                        <NumberFormat\n                                            value={extraInfor.priceData.valueVi}\n                                            displayType={'text'}\n                                            thousandSeparator={true}\n                                            suffix={'VNĐ'}\n                                            className='currency'\n                                        />\n                                    }\n                                    {\n                                        extraInfor && extraInfor.priceData && language === LANGUAGES.EN &&\n                                        <NumberFormat\n                                            value={extraInfor.priceData.valueEn}\n                                            displayType={'text'}\n                                            thousandSeparator={true}\n                                            suffix={'$'}\n                                            className='currency'\n                                        />\n                                    }\n                                    {/* <NumberFormat\n                                        value={24444}\n                                        displayType={'text'}\n                                        thousandSeparator={true}\n                                        suffix={'VNĐ'}\n                                    />\n                                    {\n                                        extraInfor.priceData.valueVi ? extraInfor.priceData.valueVi : ''\n                                    } */}\n                                    <span className='detail' onClick={() => this.showHideDetailInfor(true)}>\n                                        <FormattedMessage id={'patient.extra-infor-doctor.detail'} />\n                                    </span>\n                                </div>\n                            }\n                            {isShowDetailInfor === true &&\n                                <>\n                                    <div className='title-price'>\n                                        <FormattedMessage id={'patient.extra-infor-doctor.price'} />:\n                                    </div>\n                                    <div className='detail-infor'>\n                                        <div className='price'>\n                                            <span className='left'>\n                                                <FormattedMessage id={'patient.extra-infor-doctor.price'} />:\n                                            </span>\n                                            <span className='right'>\n                                                {\n                                                    extraInfor && extraInfor.priceData && language === LANGUAGES.VI &&\n                                                    <NumberFormat\n                                                        value={extraInfor.priceData.valueVi}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        suffix={'VNĐ'}\n                                                        className='currency'\n                                                    />\n                                                }\n                                                {\n                                                    extraInfor && extraInfor.priceData && language === LANGUAGES.EN &&\n                                                    <NumberFormat\n                                                        value={extraInfor.priceData.valueEn}\n                                                        displayType={'text'}\n                                                        thousandSeparator={true}\n                                                        suffix={'$'}\n                                                        className='currency'\n                                                    />\n                                                }\n                                            </span>\n                                        </div>\n                                        <div className='note'>\n                                            {extraInfor.note ? extraInfor.note : ''}\n                                        </div>\n                                    </div>\n                                    <div className='payment'>\n                                        <FormattedMessage id={'patient.extra-infor-doctor.payment'} />\n                                        {extraInfor.paymentData && language === LANGUAGES.VI ? extraInfor.paymentData.valueVi : ''}\n                                        {extraInfor.paymentData && language === LANGUAGES.EN ? extraInfor.paymentData.valueEn : ''}\n                                    </div>\n                                    <div className='hide-price'>\n                                        <span onClick={() => this.showHideDetailInfor(false)}>\n                                            <FormattedMessage id={'patient.extra-infor-doctor.hide-price'} />\n                                        </span>\n                                    </div>\n                                </>\n                            }\n                        </div>\n                    </div>\n\n                </div>\n            </React.Fragment >\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        systemMenuPath: state.app.systemMenuPath,\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DoctorExtraInfor);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport HomeHeader from '../../HomePage/HomeHeader';\nimport './DetailDoctor.scss'\nimport { getDetailInforDoctor } from '../../../services/userService';\nimport { LANGUAGES } from '../../../utils/constant';\nimport DoctorSchedule from './DoctorSchedule';\nimport DoctorExtraInfor from './DoctorExtraInfor';\n\nclass DetailDoctor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            detailDoctor: {},\n            currentDoctorId: this.props.match.params.id\n        }\n    }\n\n    async componentDidMount() {\n        if (this.props.match && this.props.match.params && this.props.match.params.id) {\n            let id = this.props.match.params.id\n            // this.setState({\n            //     currentDoctorId: id\n            // })\n            let res = await getDetailInforDoctor(id)\n            // console.log(\"check res: \", res)\n            if (res && res.errCode === 0) {\n                this.setState({\n                    detailDoctor: res.data\n                })\n            }\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n\n    };\n\n\n    render() {\n        // console.log(this.props.match.params.id)\n        // console.log(\"this.state: \", this.state)\n        // console.log(\"this.props: \", this.props)\n        let { detailDoctor } = this.state\n        let { language } = this.props\n        let nameVi = '', nameEn = ''\n\n        if (detailDoctor && detailDoctor.positionData) {\n            nameVi = `${detailDoctor.positionData.valueVi}, ${detailDoctor.lastName} ${detailDoctor.firstName}`\n            nameEn = `${detailDoctor.positionData.valueEn}, ${detailDoctor.firstName} ${detailDoctor.lastName}`\n        }\n\n        return (\n            <React.Fragment>\n                <HomeHeader />\n                <div className='detail-doctor-container'>\n                    <div className='intro-doctor'>\n                        <div className='content-left'>\n                            <div className='image-doctor'\n                                style={{ backgroundImage: `url(${detailDoctor && detailDoctor.image ? detailDoctor.image : ''})` }}>\n                            </div>\n                        </div>\n                        <div className='content-right'>\n                            <div className='up'>\n                                {\n                                    language === LANGUAGES.VI ? nameVi : nameEn\n                                }\n                            </div>\n                            <div className='down'>\n                                {detailDoctor && detailDoctor.Markdown &&\n                                    detailDoctor.Markdown.description &&\n                                    <span>\n                                        {detailDoctor.Markdown.description}\n                                    </span>\n                                }\n                            </div>\n                        </div>\n                    </div>\n                    <div className='schedule-doctor'>\n                        <div className='content-left'>\n                            {/* <DoctorSchedule doctorId={detailDoctor && detailDoctor.id ? detailDoctor.id : -1} /> */}\n                            <DoctorSchedule doctorId={this.state.currentDoctorId} />\n                            {/* currentDoctorId */}\n                        </div>\n                        <div className='content-right'>\n                            <DoctorExtraInfor doctorId={this.state.currentDoctorId} />\n                        </div>\n                    </div>\n                    <div className='detail-infor-doctor'>\n                        {detailDoctor && detailDoctor.Markdown && detailDoctor.Markdown.contentHTML &&\n                            <div dangerouslySetInnerHTML={{ __html: detailDoctor.Markdown.contentHTML }}>\n                            </div>\n                        }\n                    </div>\n                    <div className='comment-doctor'></div>\n                </div>\n            </React.Fragment >\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        systemMenuPath: state.app.systemMenuPath,\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DetailDoctor);\n","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from \"react-redux\";\nimport './ManageSchedule.scss'\nimport Select from 'react-select'\nimport * as action from '../../../store/actions'\nimport { LANGUAGES, dateFormat } from '../../../utils';\nimport DatePicker from '../../../components/Input/DatePicker'\nimport moment from 'moment';\nimport { toast } from 'react-toastify';\nimport _ from 'lodash';\nimport { saveBulkScheduleDoctor } from '../../../services/userService';\n\nclass ManageSchedule extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            listDoctors: [],\n            selectedDoctor: {},\n            currentDate: new Date(),\n            rangeTime: []\n        }\n    }\n\n    componentDidMount() {\n        this.props.fetchAllDoctorsRedux()\n        this.props.fetchAllScheduleTimeRedux()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // console.log(\"did update\")\n        if (prevProps.allDoctors !== this.props.allDoctors) {\n            let dataSelect = this.buildDataInput(this.props.allDoctors)\n            this.setState({\n                listDoctors: dataSelect\n            })\n        }\n\n        if (prevProps.allScheduleTime !== this.props.allScheduleTime) {\n            // console.log(\"this.props.allScheduleTime: \", this.props.allScheduleTime)\n            let data = this.props.allScheduleTime\n            if (data && data.length > 0) {\n                data = data.map((item) => {\n                    item.isSelected = false\n                    return item\n                })\n            }\n\n            // console.log(\"check data time: \", data)\n\n            this.setState({\n                rangeTime: data\n            })\n        }\n\n        // if (prevProps.language !== this.props.language) {\n        //     let dataSelect = this.buildDataInput(this.props.allDoctors)\n        //     this.setState({\n        //         listDoctors: dataSelect\n        //     })\n        // }\n    }\n\n    buildDataInput = (dataInput) => {\n        let result = []\n        let { language } = this.props\n        dataInput.map((item, index) => {\n            let object = {}\n            let labelVi = `${item.lastName} ${item.firstName}`\n            let labelEn = `${item.firstName} ${item.lastName}`\n\n            object.label = language === LANGUAGES.VI ? labelVi : labelEn\n            object.value = item.id\n            result.push(object)\n            return ''\n        })\n        return result\n    }\n\n    handleChangeSelect = async (selectedOption) => {\n        console.log(\"selectOption: \", selectedOption)\n        this.setState({ selectedDoctor: selectedOption })\n    }\n\n    handleChangeDatePicker = (date) => {\n        this.setState({\n            currentDate: date[0]\n        })\n    }\n\n    handleClickBtnTime = (time) => {\n        // console.log(\"Check tesst\")\n        // console.log(\"time: \", time)\n        let { rangeTime } = this.state\n        if (rangeTime && rangeTime.length > 0) {\n            rangeTime = rangeTime.map(item => {\n                if (item.id === time.id)\n                    item.isSelected = !item.isSelected\n                return item\n            })\n        }\n        this.setState({\n            rangeTime: rangeTime\n        })\n    }\n\n    handleClickBtnSave = async () => {\n        let result = []\n        let { rangeTime, selectedDoctor, currentDate } = this.state\n        // console.log(\"this.state.rangeTime: \", this.state.rangeTime)\n        // console.log(\"current date: \", moment(currentDate).format('DD/MM/YYYY'))\n        // console.log(\"this.state: \", this.state)\n        if (!currentDate) {\n            toast.error(\"Invalid date\")\n            return\n        }\n\n        if (selectedDoctor && _.isEmpty(selectedDoctor)) {\n            toast.error(\"Invalidate selected Doctor\")\n            return\n        }\n\n        console.log(\"currentDate: \", currentDate)\n\n        // let formatedDate = moment(currentDate).format(dateFormat.SEND_TO_SERVER)\n        let formatedDate = new Date(currentDate).getTime()\n        // console.log(\"formatedDate: \", formatedDate)\n        if (rangeTime && rangeTime.length > 0) {\n            let selectedTime = rangeTime.filter((item) => item.isSelected === true)\n\n            if (selectedTime && selectedTime.length > 0) {\n                selectedTime.map((schedule) => {\n                    let object = {}\n                    object.doctorId = selectedDoctor.value\n                    object.date = formatedDate\n                    object.timeType = schedule.keyMap\n                    result.push(object)\n                    return ''\n                })\n            } else {\n                toast.error(\"Invalid selected time ! \")\n                return\n            }\n        }\n        console.log(\"result: \", result)\n\n        let res = await saveBulkScheduleDoctor({\n            arrSchedule: result\n        })\n        // console.log(\"res: \", res)\n        // console.log('check result: ', result)\n        if (res && res.errCode === 0) {\n            toast.success('Save scheduel success')\n        } else {\n            toast.error(\"Save scheduel failed \")\n        }\n    }\n\n    render() {\n        // console.log(\"this.state: \", this.state)\n        // const { isLoggedIn } = this.props\n        // console.log(\"this.props\", this.props)\n        let { rangeTime } = this.state\n        let { language } = this.props\n        // console.log(\"this.state.rangeTime: \", this.state.rangeTime)\n        return (\n            <React.Fragment>\n                <div className='manage-schedule-container'>\n                    <div className='m-s-title'>\n                        <FormattedMessage id='manage-schedule.title' />\n                    </div>\n                    <div className='container'>\n                        <div className='row'>\n                            <div className='col-6 form-group'>\n                                <label><FormattedMessage id='manage-schedule.choose-doctor' /></label>\n                                <Select\n                                    value={this.state.selectedOption}\n                                    onChange={this.handleChangeSelect}\n                                    options={this.state.listDoctors}\n                                />\n                            </div>\n                            <div className='col-6 form-group'>\n                                <label><FormattedMessage id='manage-schedule.choose-date' /></label>\n                                <DatePicker\n                                    className='form-control'\n                                    onChange={this.handleChangeDatePicker}\n                                    value={this.state.currentDate}\n                                    minDate={new Date()}\n                                />\n                            </div>\n                            <div className='col-12 pick-hour-container'>\n                                {rangeTime && rangeTime.length > 0 &&\n                                    rangeTime.map((item, index) => {\n                                        return (\n                                            <button\n                                                className={item.isSelected === true ? 'btn btn-schedule active' : 'btn btn-schedule'}\n                                                key={index} onClick={() => this.handleClickBtnTime(item)}\n                                            >\n                                                {language === LANGUAGES.VI ? item.valueVi : item.valueEn}\n                                            </button>\n                                        )\n                                    })\n                                }\n                            </div>\n                            <button className='btn btn-primary btn-save-schedule'\n                                onClick={() => this.handleClickBtnSave()}\n                            >\n                                <FormattedMessage id='manage-schedule.save' />\n                            </button>\n                        </div>\n                        <div></div>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        // systemMenuPath: state.app.systemMenuPath,\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language,\n        allDoctors: state.admin.allDoctors,\n        allScheduleTime: state.admin.allScheduleTime\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchAllDoctorsRedux: () => dispatch(action.fetchAllDoctor()),\n        fetchAllScheduleTimeRedux: () => dispatch(action.fetchAllScheduleTime())\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ManageSchedule);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { Redirect, Route, Switch } from 'react-router-dom';\nimport ManagerSchedule from '../containers/System/Doctor/ManageSchedule';\nimport Header from '../containers/Header/Header';\n\nclass Doctor extends Component {\n    render() {\n        // const { isLoggedIn } = this.props\n        return (\n            <React.Fragment>\n                {this.props.isLoggedIn && <Header />}\n                <div className=\"system-container\">\n                    <div className=\"system-list\">\n                        <Switch>\n                            <Route path=\"/doctor/manage-schedule\" component={ManagerSchedule} />\n                        </Switch>\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        systemMenuPath: state.app.systemMenuPath,\n        isLoggedIn: state.user.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Doctor);\n","import React, { Component } from 'react';\nimport { connect } from \"react-redux\";\nimport { FormattedMessage } from 'react-intl';\nimport { postVerifyBookAppointment } from '../../services/userService'\nimport './VerifyEmail.scss'\nimport HomeHeader from '../HomePage/HomeHeader';\nclass VerifyEmail extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            statusVerify: '',\n            errCode: 0\n        }\n    }\n\n    async componentDidMount() {\n        let urlParams = new URLSearchParams(this.props.location.search)\n        let token = urlParams.get('token')\n        let doctorId = urlParams.get('doctorId')\n        // console.log(\"token: \", token, doctorId)\n        let res = await postVerifyBookAppointment({\n            token: token,\n            doctorId: doctorId\n        })\n        console.log(\"res: \", res)\n\n        if (res) {\n            this.setState({\n                statusVerify: res.errMessage,\n                errCode: res.errCode\n            })\n        }\n    }\n\n    async componentDidUpdate(prevProps, prevState) {\n\n    };\n\n\n    render() {\n        // console.log(\"this.props: \", this.props)\n        let { statusVerify, errCode } = this.state\n        return (\n            <React.Fragment>\n                <HomeHeader />\n                <div className='container-verify-email'>\n                    {statusVerify}\n                </div>\n            </React.Fragment >\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        systemMenuPath: state.app.systemMenuPath,\n        isLoggedIn: state.user.isLoggedIn,\n        language: state.app.language,\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(VerifyEmail);\n","import React, { Component, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport { ConnectedRouter as Router } from 'connected-react-router';\nimport { history } from '../redux'\nimport { ToastContainer } from 'react-toastify';\nimport CustomScrollbars from '../components/CustomScrollbars';\nimport { userIsAuthenticated, userIsNotAuthenticated } from '../hoc/authentication';\nimport { path } from '../utils'\nimport Home from '../routes/Home';\n// import Login from '../routes/Login';\nimport Login from './Auth/Login';\nimport System from '../routes/System';\n// import { CustomToastCloseButton } from '../components/CustomToast';\nimport HomePage from './HomePage/HomePage.js'\n// import ConfirmModal from '../components/ConfirmModal';\nimport DetailDoctor from './Patient/Doctor/DetailDoctor';\nimport Doctor from '../routes/Doctor';\nimport UserReduxIsLoginFalse from './System/Admin/UserReduxIsLoginFalse';\nimport VerifyEmail from './Patient/VerifyEmail.js';\n\nclass App extends Component {\n\n    handlePersistorState = () => {\n        const { persistor } = this.props;\n        let { bootstrapped } = persistor.getState();\n        if (bootstrapped) {\n            if (this.props.onBeforeLift) {\n                Promise.resolve(this.props.onBeforeLift())\n                    .then(() => this.setState({ bootstrapped: true }))\n                    .catch(() => this.setState({ bootstrapped: true }));\n            } else {\n                this.setState({ bootstrapped: true });\n            }\n        }\n    };\n\n    componentDidMount() {\n        this.handlePersistorState();\n    }\n\n    render() {\n        return (\n            <Fragment>\n                <Router history={history}>\n                    <div className=\"main-container\">\n                        {/* <ConfirmModal /> */}\n                        <div className=\"content-container\">\n                            <CustomScrollbars style={{ height: '100vh', width: '100%' }}>\n                                <Switch>\n                                    <Route path={path.HOME} exact component={(Home)} />\n                                    <Route path={path.LOGIN} component={userIsNotAuthenticated(Login)} />\n                                    <Route path={path.CREATE_USER} component={userIsNotAuthenticated(UserReduxIsLoginFalse)} />\n                                    <Route path={path.SYSTEM} component={userIsAuthenticated(System)} />\n                                    <Route path={path.MANAGE_SCHEDULE} component={userIsAuthenticated(Doctor)} />\n                                    <Route path={path.HOMEPAGE} component={HomePage} />\n                                    <Route path={path.DETAIL_DOCTOR} component={DetailDoctor} />\n                                    <Route path={path.VERIFY_EMAIL_BOOKING} component={VerifyEmail} />\n                                </Switch>\n                            </CustomScrollbars>\n                        </div>\n\n                        {/* <ToastContainer\n                            className=\"toast-container\" toastClassName=\"toast-item\" bodyClassName=\"toast-item-body\"\n                            autoClose={false} hideProgressBar={true} pauseOnHover={false}\n                            pauseOnFocusLoss={true} closeOnClick={false} draggable={false}\n                            closeButton={<CustomToastCloseButton />}\n                        /> */}\n\n                        <ToastContainer\n                            position='top-right'\n                            autoClose={5000}\n                            hideProgressBar={false}\n                            newestOnTop={false}\n                            closeOnClick\n                            rtl={false}\n                            pauseOnFocusLoss\n                            draggable\n                            pauseOnHover\n                        />\n                    </div>\n                </Router>\n            </Fragment>\n        )\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        started: state.app.started,\n        isLoggedIn: state.user.isLoggedIn\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport { IntlProvider } from \"react-intl\";\n\nimport '@formatjs/intl-pluralrules/polyfill';\nimport '@formatjs/intl-pluralrules/locale-data/en';\nimport '@formatjs/intl-pluralrules/locale-data/vi';\n\nimport '@formatjs/intl-relativetimeformat/polyfill';\nimport '@formatjs/intl-relativetimeformat/locale-data/en';\nimport '@formatjs/intl-relativetimeformat/locale-data/vi';\n\nimport { LanguageUtils } from '../utils'\n\nconst messages = LanguageUtils.getFlattenedMessages();\n\nclass IntlProviderWrapper extends Component {\n\n    render() {\n        const { children, language } = this.props;\n        return (\n            <IntlProvider\n                locale={language}\n                messages={messages[language]}\n                defaultLocale=\"vi\">\n                {children}\n            </IntlProvider>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    return {\n        language: state.app.language\n    };\n};\n\nexport default connect(mapStateToProps, null)(IntlProviderWrapper);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './styles/styles.scss';\n\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport IntlProviderWrapper from \"./hoc/IntlProviderWrapper\";\n\n\nimport { Provider } from 'react-redux';\nimport reduxStore, { persistor } from './redux';\n\nconst renderApp = () => {\n    ReactDOM.render(\n        <Provider store={reduxStore}>\n            <IntlProviderWrapper>\n                <App persistor={persistor}/>\n            </IntlProviderWrapper>\n        </Provider>,\n        document.getElementById('root')\n    );\n};\n\nrenderApp();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","class CommonUtils {\n    static getBase64(file) {\n        return new Promise((resolve, reject) => {\n            const reader = new FileReader()\n            reader.readAsDataURL(file)\n            reader.onload = () => resolve (reader.result)\n            reader.onerror = error => reject(error)\n        })\n    }\n}\n\nexport default CommonUtils;","import React, { Component } from 'react';\nimport { FormattedMessage } from 'react-intl';\nimport { connect } from 'react-redux';\nimport './TableManagerUser.scss'\nimport * as action from '../../../store/actions'\n\n// import { getAllUsers, createNewUserService, deleteUserService, editUserService } from '../../services/userService'\n// import ModalUser from './ModalUser';\n// import ModalEditUser from './ModalEditUser';\n// import { emitter } from '../../utils/emitter';\n\nimport MarkdownIt from 'markdown-it';\nimport MdEditor from 'react-markdown-editor-lite';\n// import style manually\nimport 'react-markdown-editor-lite/lib/index.css';\n\n// Register plugins if required\n// MdEditor.use(YOUR_PLUGINS_HERE);\n\n// Initialize a markdown parser\nconst mdParser = new MarkdownIt(/* Markdown-it options */);\n\n// Finish!\nfunction handleEditorChange({ html, text }) {\n    console.log('handleEditorChange', html, text);\n}\n\n\nclass TableManagerUser extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            userRedux: []\n        }\n    }\n\n    componentDidMount() {\n        this.props.fetchUserRedux()\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.listUsers !== this.props.listUsers) {\n            this.setState({\n                userRedux: this.props.listUsers\n            })\n        }\n    }\n\n    handleDeleteUser = (user) => {\n        this.props.deleteUserRedux(user.id)\n    }\n\n    handleEditUser = (user) => {\n        // console.log(\"handle edit user: \", user)\n        this.props.handleEditUserFromParent(user)\n        // this.props.editUserRedux(user.id)\n    }\n\n    render() {\n        // console.log(\"check state: \", this.state)\n        let arrUsers = this.state.userRedux\n        return (\n            <React.Fragment>\n                <table id='TableManagerUser' >\n                    <tbody>\n                        <tr>\n                            <th>Email</th>\n                            <th>First Name</th>\n                            <th>Last Name</th>\n                            <th>Address</th>\n                            <th>Actions</th>\n                        </tr>\n\n                        {arrUsers && arrUsers.length > 0 &&\n                            arrUsers.map((item, index) => {\n                                return (\n                                    < tr key={index} >\n                                        <td>{item.email}</td>\n                                        <td>{item.firstName}</td>\n                                        <td>{item.lastName}</td>\n                                        <td>{item.address}</td>\n                                        <td>\n                                            <button\n                                                className='btn-edit'\n                                                onClick={() => this.handleEditUser(item)}\n                                            ><i className=\"fas fa-edit\"></i>\n                                            </button>\n                                            <button\n                                                className='btn-delete'\n                                                onClick={() => this.handleDeleteUser(item)}\n                                            ><i className=\"fas fa-trash\"></i></button>\n                                        </td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table >\n                {/* <MdEditor style={{ height: '500px' }} renderHTML={text => mdParser.render(text)} onChange={handleEditorChange} /> */}\n            </React.Fragment>\n\n        );\n    }\n\n}\n\nconst mapStateToProps = state => {\n    return {\n        listUsers: state.admin.users\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        fetchUserRedux: () => dispatch(action.fetchAllUserStart()),\n        deleteUserRedux: (data) => dispatch(action.deleteUser(data)),\n        // editUserRedux: (data) => dispatch(action.editUser(data))\n    };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TableManagerUser);\n","const actionTypes = Object.freeze({\n    //app\n    APP_START_UP_COMPLETE: 'APP_START_UP_COMPLETE',\n    SET_CONTENT_OF_CONFIRM_MODAL: 'SET_CONTENT_OF_CONFIRM_MODAL',\n    CHANGELANGUAGE: 'CHANGELANGUAGE',\n\n    //user\n    ADD_USER_SUCCESS: 'ADD_USER_SUCCESS',\n    USER_LOGIN_SUCCESS: 'USER_LOGIN_SUCCESS',\n    USER_LOGIN_FAIL: 'USER_LOGIN_FAIL',\n    PROCESS_LOGOUT: 'PROCESS_LOGOUT',\n\n    //admin \n    FETCH_GENDER_START: 'FETCH_GENDER_START',\n    FETCH_GENDER_SUCCESS: 'FETCH_GENDER_SUCCESS',\n    FETCH_GENDER_FAILED: 'FETCH_GENDER_FAILED',\n\n    FETCH_ROLE_START: 'FETCH_ROLE_START',\n    FETCH_ROLE_SUCCESS: 'FETCH_ROLE_SUCCESS',\n    FETCH_ROLE_FAILED: 'FETCH_ROLE_FAILED',\n\n    FETCH_POSITION_START: 'FETCH_POSITION_START',\n    FETCH_POSITION_SUCCESS: 'FETCH_POSITION_SUCCESS',\n    FETCH_POSITION_FAILED: 'FETCH_POSITION_FAILED',\n\n    CREATE_USER_SUCCES: 'CREATE_USER_SUCCES',\n    CREATE_USER_FAILED: 'CREATE_USER_FAILED',\n\n    EDIT_USER_SUCCES: 'EDIT_USER_SUCCES',\n    EDIT_USER_FAILED: 'EDIT_USER_FAILED',\n\n    DELETE_USER_SUCCES: 'DELETE_USER_SUCCES',\n    DELETE_USER_FAILED: 'DELETE_USER_FAILED',\n\n    FETCH_ALL_USER_SUCCESS: 'FETCH_ALL_USER_SUCCESS',\n    FETCH_ALL_USER_FAILED: 'FETCH_ALL_USER_FAILED',\n\n    FETCH_TOP_DOCTOR_SUCCESS: 'FETCH_TOP_DOCTOR_SUCCESS',\n    FETCH_TOP_DOCTOR_FAILED: 'FETCH_TOP_DOCTOR_FAILED',\n\n    FETCH_ALL_DOCTOR_SUCCESS: 'FETCH_ALL_DOCTOR_SUCCESS',\n    FETCH_ALL_DOCTOR_FAILED: 'FETCH_ALL_DOCTOR_FAILED',\n\n    SAVE_DETAIL_INFOR_DOCTOR_SUCCESS: 'SAVE_DETAIL_INFOR_DOCTOR_SUCCESS',\n    SAVE_DETAIL_INFOR_DOCTOR_FAILED: 'SAVE_DETAIL_INFOR_DOCTOR_FAILED',\n\n    FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS: 'FETCH_ALLCODE_SCHEDULE_TIME_SUCCESS',\n    FETCH_ALLCODE_SCHEDULE_TIME_FAILED: 'FETCH_ALLCODE_SCHEDULE_TIME_FAILED',\n\n    FETCH_REQUIRED_DOCTOR_INFOR_START: 'FETCH_REQUIRED_DOCTOR_INFOR_START',\n    FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS: 'FETCH_REQUIRED_DOCTOR_INFOR_SUCCESS',\n    FETCH_REQUIRED_DOCTOR_INFOR_FAILED: 'FETCH_REQUIRED_DOCTOR_INFOR_FAILED'\n})\n\nexport default actionTypes;"],"sourceRoot":""}